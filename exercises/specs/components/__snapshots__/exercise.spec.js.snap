// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Exercises component renders and matches snapshot 1`] = `
.c0 {
  margin-right: 0.5rem;
  margin-left: 0.5rem;
}

.c3 {
  position: relative;
  overflow: hidden;
}

.c4 {
  width: 200px;
  background: #e43;
  position: absolute;
  top: 25px;
  left: -50px;
  text-align: center;
  min-height: 50px;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  color: #f0f0f0;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
  z-index: 2;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-shadow: 0 0 3px rgba(0,0,0,.3);
  top: 25px;
  right: -50px;
  left: auto;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  background: #232e66;
}

.c4 > div {
  font-size: 13px;
  white-space: nowrap;
}

.c2 {
  margin-top: 1.5rem;
}

.c1 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  margin-right: 0.5rem;
}

<div
  className="exercise-editor"
>
  <div
    className="editing-controls"
  >
    <nav
      className="nav nav-tabs"
      onKeyDown={[Function]}
      role="tablist"
    >
      <a
        aria-controls="exercise-parts-tabpane-question-0"
        aria-selected={true}
        className="nav-item nav-link active"
        data-rb-event-key="question-0"
        href="#"
        id="exercise-parts-tab-question-0"
        onClick={[Function]}
        onKeyDown={[Function]}
        role="tab"
      >
        Question
      </a>
      <a
        aria-controls="exercise-parts-tabpane-tags"
        aria-selected={false}
        className="nav-item nav-link"
        data-rb-event-key="tags"
        href="#"
        id="exercise-parts-tab-tags"
        onClick={[Function]}
        onKeyDown={[Function]}
        role="tab"
        tabIndex={-1}
      >
        Tags
      </a>
      <a
        aria-controls="exercise-parts-tabpane-assets"
        aria-selected={false}
        className="nav-item nav-link"
        data-rb-event-key="assets"
        href="#"
        id="exercise-parts-tab-assets"
        onClick={[Function]}
        onKeyDown={[Function]}
        role="tab"
        tabIndex={-1}
      >
        Assets
      </a>
    </nav>
    <div
      className="tab-content"
    >
      <div
        aria-hidden={false}
        aria-labelledby="exercise-parts-tab-question-0"
        className="fade tab-pane active show"
        id="exercise-parts-tabpane-question-0"
        role="tabpanel"
      >
        <div
          className="nickname"
        >
          <label>
            Exercise Nickname:
            <input
              onChange={[Function]}
              value="maurine"
            />
          </label>
        </div>
        <div
          className="question"
        >
          <div
            className="format-type"
          >
            <div>
              <input
                checked={true}
                id="input-multiple-choice"
                name="0-formats"
                onChange={[Function]}
                type="radio"
                value="multiple-choice"
              />
              <label
                htmlFor="input-multiple-choice"
              >
                Multiple Choice
              </label>
            </div>
            <div>
              <input
                checked={false}
                id="input-true-false"
                name="0-formats"
                onChange={[Function]}
                type="radio"
                value="true-false"
              />
              <label
                htmlFor="input-true-false"
              >
                True/False
              </label>
            </div>
            <div
              className="multi-choice-boxes"
            >
              <div
                className="requires-choices"
              >
                <input
                  checked={false}
                  id="input-rq"
                  onChange={[Function]}
                  type="checkbox"
                />
                <label
                  htmlFor="input-rq"
                >
                  Requires Choices
                </label>
              </div>
              <div
                className="order-matters"
              >
                <input
                  checked={false}
                  id="input-om"
                  onChange={[Function]}
                  type="checkbox"
                />
                <label
                  htmlFor="input-om"
                >
                  Order Matters
                </label>
              </div>
            </div>
          </div>
          <div
            className="question-stimulus"
          >
            <label>
              Question Stimulus
            </label>
            <textarea
              defaultValue=""
              onChange={[Function]}
            />
          </div>
          <div>
            <label>
              Question Stem
            </label>
            <textarea
              onChange={[Function]}
              value="What conditions imply that we can use classical physics without considering special relativity or quantum mechanics?"
            />
          </div>
          <div>
            <label>
              Answers
            </label>
            <button
              className="ox-icon-plus-square btn btn-plain"
              disabled={false}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              type="button"
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-plus-square fa-w-14 c0 ox-icon ox-icon-plus-square"
                data-icon="plus-square"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 448 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </button>
            <ol
              className="answer-choices"
            >
              <li
                className="answer correct-answer"
              >
                <div
                  className="answer-actions"
                >
                  <label>
                    Distractor
                  </label>
                  <button
                    className="ox-icon-check-circle is-correct btn btn-plain"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      className="svg-inline--fa fa-check-circle fa-w-16 c0 ox-icon ox-icon-check-circle is-correct"
                      color="green"
                      data-icon="check-circle"
                      data-prefix="fas"
                      focusable="false"
                      role="img"
                      style={Object {}}
                      viewBox="0 0 512 512"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                        fill="currentColor"
                        style={Object {}}
                      />
                    </svg>
                  </button>
                  <button
                    className="ox-icon-arrow-circle-down btn btn-plain"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      className="svg-inline--fa fa-arrow-circle-down fa-w-16 c0 ox-icon ox-icon-arrow-circle-down"
                      data-icon="arrow-circle-down"
                      data-prefix="fas"
                      focusable="false"
                      role="img"
                      style={Object {}}
                      viewBox="0 0 512 512"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-143.6-28.9L288 302.6V120c0-13.3-10.7-24-24-24h-16c-13.3 0-24 10.7-24 24v182.6l-72.4-75.5c-9.3-9.7-24.8-9.9-34.3-.4l-10.9 11c-9.4 9.4-9.4 24.6 0 33.9L239 404.3c9.4 9.4 24.6 9.4 33.9 0l132.7-132.7c9.4-9.4 9.4-24.6 0-33.9l-10.9-11c-9.5-9.5-25-9.3-34.3.4z"
                        fill="currentColor"
                        style={Object {}}
                      />
                    </svg>
                  </button>
                  <button
                    className="ox-icon-ban btn btn-plain"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      className="svg-inline--fa fa-ban fa-w-16 c0 ox-icon ox-icon-ban"
                      data-icon="ban"
                      data-prefix="fas"
                      focusable="false"
                      role="img"
                      style={Object {}}
                      viewBox="0 0 512 512"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z"
                        fill="currentColor"
                        style={Object {}}
                      />
                    </svg>
                  </button>
                </div>
                <textarea
                  onChange={[Function]}
                  value="<ol>
  <li>matter is moving at speeds of less than roughly 1% the speed of light,</li>
  <li>objects are too small to be seen with the naked eye, and</li>
  <li>there is the involvement of only a weak gravitational field</li>
</ol>
"
                />
                <label>
                  Choice-Level Feedback
                </label>
                <textarea
                  onChange={[Function]}
                  value="Objects far smaller than what is visible may require quantum mechanics."
                />
              </li>
              <li
                className="answer"
              >
                <div
                  className="answer-actions"
                >
                  <label>
                    Distractor
                  </label>
                  <button
                    className="ox-icon-check-circle is-correct btn btn-plain"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      className="svg-inline--fa fa-check-circle fa-w-16 c0 ox-icon ox-icon-check-circle is-correct"
                      color="lightGray"
                      data-icon="check-circle"
                      data-prefix="fas"
                      focusable="false"
                      role="img"
                      style={Object {}}
                      viewBox="0 0 512 512"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z"
                        fill="currentColor"
                        style={Object {}}
                      />
                    </svg>
                  </button>
                  <button
                    className="ox-icon-arrow-circle-up btn btn-plain"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      className="svg-inline--fa fa-arrow-circle-up fa-w-16 c0 ox-icon ox-icon-arrow-circle-up"
                      data-icon="arrow-circle-up"
                      data-prefix="fas"
                      focusable="false"
                      role="img"
                      style={Object {}}
                      viewBox="0 0 512 512"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M8 256C8 119 119 8 256 8s248 111 248 248-111 248-248 248S8 393 8 256zm143.6 28.9l72.4-75.5V392c0 13.3 10.7 24 24 24h16c13.3 0 24-10.7 24-24V209.4l72.4 75.5c9.3 9.7 24.8 9.9 34.3.4l10.9-11c9.4-9.4 9.4-24.6 0-33.9L273 107.7c-9.4-9.4-24.6-9.4-33.9 0L106.3 240.4c-9.4 9.4-9.4 24.6 0 33.9l10.9 11c9.6 9.5 25.1 9.3 34.4-.4z"
                        fill="currentColor"
                        style={Object {}}
                      />
                    </svg>
                  </button>
                  <button
                    className="ox-icon-ban btn btn-plain"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      className="svg-inline--fa fa-ban fa-w-16 c0 ox-icon ox-icon-ban"
                      data-icon="ban"
                      data-prefix="fas"
                      focusable="false"
                      role="img"
                      style={Object {}}
                      viewBox="0 0 512 512"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z"
                        fill="currentColor"
                        style={Object {}}
                      />
                    </svg>
                  </button>
                </div>
                <textarea
                  onChange={[Function]}
                  value="<ol>
  <li>matter is moving at speeds greater than roughly 1% the speed of light,</li>
  <li>objects are large enough to be seen with the naked eye, and</li>
  <li>there is the involvement of a strong gravitational field</li>
</ol>
"
                />
                <label>
                  Choice-Level Feedback
                </label>
                <textarea
                  onChange={[Function]}
                  value="Speeds greater than roughly 1% pf the speed of light start to involve significant effects from relativity."
                />
              </li>
            </ol>
          </div>
          <div>
            <label>
              Detailed Solution
            </label>
            <textarea
              onChange={[Function]}
              value="four"
            />
          </div>
        </div>
      </div>
      <div
        aria-hidden={true}
        aria-labelledby="exercise-parts-tab-tags"
        className="fade tab-pane"
        id="exercise-parts-tabpane-tags"
        role="tabpanel"
      >
        <div
          className="tags-panel"
        >
          <div
            className="tags"
          >
            <div
              className="tag-type has-single-tag"
            >
              <div
                className="heading"
              >
                <span
                  className="label"
                >
                  Book
                </span>
                <div
                  className="controls"
                >
                  <button
                    className="ox-icon-plus-circle btn btn-plain"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      className="svg-inline--fa fa-plus-circle fa-w-16 c0 ox-icon ox-icon-plus-circle"
                      data-icon="plus-circle"
                      data-prefix="fas"
                      focusable="false"
                      role="img"
                      style={Object {}}
                      viewBox="0 0 512 512"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                        fill="currentColor"
                        style={Object {}}
                      />
                    </svg>
                  </button>
                </div>
              </div>
              <div
                className="tag"
              >
                <select
                  className="form-control"
                  onChange={[Function]}
                  value="stax-phys"
                >
                  <option
                    value="stax-anp"
                  >
                    Anatomy and Physiology
                  </option>
                  <option
                    value="stax-apbio"
                  >
                    Biology for AP® Courses
                  </option>
                  <option
                    value="stax-bio"
                  >
                    Biology
                  </option>
                  <option
                    value="stax-apphys"
                  >
                    College Physics for AP® Courses
                  </option>
                  <option
                    value="stax-phys"
                  >
                    College Physics
                  </option>
                  <option
                    value="stax-cbio"
                  >
                    Concepts of Biology
                  </option>
                  <option
                    value="stax-econ"
                  >
                    Economics
                  </option>
                  <option
                    value="stax-eship"
                  >
                    Entrepreneurship
                  </option>
                  <option
                    value="stax-macro"
                  >
                    Macro Economics
                  </option>
                  <option
                    value="stax-micro"
                  >
                    Micro Economics
                  </option>
                  <option
                    value="stax-k12phys"
                  >
                    HS Physics
                  </option>
                  <option
                    value="stax-psy"
                  >
                    Psychology
                  </option>
                  <option
                    value="stax-soc"
                  >
                    Sociology
                  </option>
                  <option
                    value="stax-apush"
                  >
                    U.S. History for AP® Courses
                  </option>
                </select>
                <span
                  className="controls"
                >
                  <button
                    className="ox-icon-trash btn btn-plain"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      className="svg-inline--fa fa-trash-alt fa-w-14 c0 ox-icon ox-icon-trash"
                      data-icon="trash-alt"
                      data-prefix="fas"
                      focusable="false"
                      role="img"
                      style={Object {}}
                      viewBox="0 0 448 512"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z"
                        fill="currentColor"
                        style={Object {}}
                      />
                    </svg>
                  </button>
                </span>
              </div>
            </div>
            <div
              className="tag-type"
            >
              <div
                className="heading"
              >
                <span
                  className="label"
                >
                  LO
                </span>
                <div
                  className="controls"
                >
                  <button
                    className="ox-icon-plus-circle btn btn-plain"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      className="svg-inline--fa fa-plus-circle fa-w-16 c0 ox-icon ox-icon-plus-circle"
                      data-icon="plus-circle"
                      data-prefix="fas"
                      focusable="false"
                      role="img"
                      style={Object {}}
                      viewBox="0 0 512 512"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                        fill="currentColor"
                        style={Object {}}
                      />
                    </svg>
                  </button>
                </div>
              </div>
              <div
                className="tag"
              >
                <select
                  className="form-control"
                  onChange={[Function]}
                  value="stax-phys"
                >
                  <option
                    value="stax-phys"
                  >
                    College Physics
                  </option>
                </select>
                <input
                  className="form-control"
                  onBlur={[Function]}
                  onChange={[Function]}
                  placeholder="##-##-##"
                  type="text"
                  value="1-2-1"
                />
                <span
                  className="controls"
                >
                  <button
                    className="ox-icon-trash btn btn-plain"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      className="svg-inline--fa fa-trash-alt fa-w-14 c0 ox-icon ox-icon-trash"
                      data-icon="trash-alt"
                      data-prefix="fas"
                      focusable="false"
                      role="img"
                      style={Object {}}
                      viewBox="0 0 448 512"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z"
                        fill="currentColor"
                        style={Object {}}
                      />
                    </svg>
                  </button>
                </span>
              </div>
            </div>
            <div
              className="tag-type has-single-tag"
            >
              <div
                className="heading"
              >
                <span
                  className="label"
                >
                  Question Type
                </span>
                <div
                  className="controls"
                />
              </div>
              <div
                className="tag"
              >
                <select
                  className="form-control"
                  disabled={false}
                  onChange={[Function]}
                  value="conceptual"
                >
                  <option
                    value="conceptual-or-recall"
                  >
                    Conceptual or Recall
                  </option>
                  <option
                    value="conceptual"
                  >
                    Conceptual
                  </option>
                  <option
                    value="recall"
                  >
                    Recall
                  </option>
                  <option
                    value="practice"
                  >
                    Practice
                  </option>
                </select>
              </div>
            </div>
            <div
              className="tag-type"
            >
              <div
                className="heading"
              >
                <span
                  className="label"
                >
                  Filter Type
                </span>
                <div
                  className="controls"
                />
              </div>
              <div
                className="tag"
              >
                <div
                  className="c1 css-2b097c-container"
                  onKeyDown={[Function]}
                >
                  <div
                    className=" css-yk16xz-control"
                    onMouseDown={[Function]}
                    onTouchEnd={[Function]}
                  >
                    <div
                      className=" css-1hwfws3"
                    >
                      <div
                        className="css-1rhbuit-multiValue"
                      >
                        <div
                          className="css-12jo7m5"
                        >
                          Test Prep
                        </div>
                        <div
                          className="css-1alnv5e"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          onTouchEnd={[Function]}
                        >
                          <svg
                            aria-hidden="true"
                            className="css-tj5bde-Svg"
                            focusable="false"
                            height={14}
                            viewBox="0 0 20 20"
                            width={14}
                          >
                            <path
                              d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
                            />
                          </svg>
                        </div>
                      </div>
                      <div
                        className="css-w8afj7-Input"
                      >
                        <div
                          className=""
                          style={
                            Object {
                              "display": "inline-block",
                            }
                          }
                        >
                          <input
                            aria-autocomplete="list"
                            autoCapitalize="none"
                            autoComplete="off"
                            autoCorrect="off"
                            disabled={false}
                            id="react-select-2-input"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            spellCheck="false"
                            style={
                              Object {
                                "background": 0,
                                "border": 0,
                                "boxSizing": "content-box",
                                "color": "inherit",
                                "fontSize": "inherit",
                                "label": "input",
                                "opacity": 1,
                                "outline": 0,
                                "padding": 0,
                                "width": "1px",
                              }
                            }
                            tabIndex="0"
                            type="text"
                            value=""
                          />
                          <div
                            style={
                              Object {
                                "height": 0,
                                "left": 0,
                                "overflow": "scroll",
                                "position": "absolute",
                                "top": 0,
                                "visibility": "hidden",
                                "whiteSpace": "pre",
                              }
                            }
                          >
                            
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      className=" css-1g48xl4-IndicatorsContainer"
                    >
                      <div
                        aria-hidden="true"
                        className=" css-tlfecz-indicatorContainer"
                        onMouseDown={[Function]}
                        onTouchEnd={[Function]}
                      >
                        <svg
                          aria-hidden="true"
                          className="css-tj5bde-Svg"
                          focusable="false"
                          height={20}
                          viewBox="0 0 20 20"
                          width={20}
                        >
                          <path
                            d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
                          />
                        </svg>
                      </div>
                      <span
                        className=" css-1okebmr-indicatorSeparator"
                      />
                      <div
                        aria-hidden="true"
                        className=" css-tlfecz-indicatorContainer"
                        onMouseDown={[Function]}
                        onTouchEnd={[Function]}
                      >
                        <svg
                          aria-hidden="true"
                          className="css-tj5bde-Svg"
                          focusable="false"
                          height={20}
                          viewBox="0 0 20 20"
                          width={20}
                        >
                          <path
                            d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                          />
                        </svg>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div
              className="tag-type"
            >
              <div
                className="heading"
              >
                <span
                  className="label"
                >
                  Requires Context
                </span>
                <div
                  className="controls"
                />
              </div>
              <div
                className="tag"
              >
                <input
                  checked={true}
                  label=""
                  onChange={[Function]}
                  type="checkbox"
                />
              </div>
            </div>
            <div
              className="tag-type has-single-tag"
            >
              <div
                className="heading"
              >
                <span
                  className="label"
                >
                  CNX Module
                </span>
                <div
                  className="controls"
                >
                  <button
                    className="ox-icon-plus-circle btn btn-plain"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      className="svg-inline--fa fa-plus-circle fa-w-16 c0 ox-icon ox-icon-plus-circle"
                      data-icon="plus-circle"
                      data-prefix="fas"
                      focusable="false"
                      role="img"
                      style={Object {}}
                      viewBox="0 0 512 512"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                        fill="currentColor"
                        style={Object {}}
                      />
                    </svg>
                  </button>
                </div>
              </div>
              <div
                className="tag"
              >
                <input
                  className="form-control"
                  onBlur={[Function]}
                  onChange={[Function]}
                  placeholder="########-####-####-####-############"
                  type="text"
                  value=""
                />
                <span
                  className="controls"
                >
                  <button
                    className="ox-icon-trash btn btn-plain"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      className="svg-inline--fa fa-trash-alt fa-w-14 c0 ox-icon ox-icon-trash"
                      data-icon="trash-alt"
                      data-prefix="fas"
                      focusable="false"
                      role="img"
                      style={Object {}}
                      viewBox="0 0 448 512"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z"
                        fill="currentColor"
                        style={Object {}}
                      />
                    </svg>
                  </button>
                </span>
              </div>
            </div>
            <div
              className="tag-type has-single-tag"
            >
              <div
                className="heading"
              >
                <span
                  className="label"
                >
                  CNX Feature
                </span>
                <div
                  className="controls"
                >
                  <button
                    className="ox-icon-plus-circle btn btn-plain"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      className="svg-inline--fa fa-plus-circle fa-w-16 c0 ox-icon ox-icon-plus-circle"
                      data-icon="plus-circle"
                      data-prefix="fas"
                      focusable="false"
                      role="img"
                      style={Object {}}
                      viewBox="0 0 512 512"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                        fill="currentColor"
                        style={Object {}}
                      />
                    </svg>
                  </button>
                </div>
              </div>
              <div
                className="tag"
              >
                <input
                  className="form-control"
                  onBlur={[Function]}
                  onChange={[Function]}
                  placeholder="feature-id"
                  type="text"
                  value="one-1"
                />
                <span
                  className="controls"
                >
                  <button
                    className="ox-icon-trash btn btn-plain"
                    disabled={false}
                    onClick={[Function]}
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      className="svg-inline--fa fa-trash-alt fa-w-14 c0 ox-icon ox-icon-trash"
                      data-icon="trash-alt"
                      data-prefix="fas"
                      focusable="false"
                      role="img"
                      style={Object {}}
                      viewBox="0 0 448 512"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z"
                        fill="currentColor"
                        style={Object {}}
                      />
                    </svg>
                  </button>
                </span>
              </div>
            </div>
            <div
              className="tag-type has-single-tag"
            >
              <div
                className="heading"
              >
                <span
                  className="label"
                >
                  DOK
                </span>
                <div
                  className="controls"
                />
              </div>
              <div
                className="tag"
              >
                <select
                  className="form-control"
                  onChange={[Function]}
                  value="3"
                >
                  <option
                    value="1"
                  >
                    1
                  </option>
                  <option
                    value="2"
                  >
                    2
                  </option>
                  <option
                    value="3"
                  >
                    3
                  </option>
                  <option
                    value="4"
                  >
                    4
                  </option>
                </select>
              </div>
            </div>
            <div
              className="tag-type has-single-tag"
            >
              <div
                className="heading"
              >
                <span
                  className="label"
                >
                  Blooms
                </span>
                <div
                  className="controls"
                />
              </div>
              <div
                className="tag"
              >
                <select
                  className="form-control"
                  onChange={[Function]}
                  value="3"
                >
                  <option
                    value="1"
                  >
                    1
                  </option>
                  <option
                    value="2"
                  >
                    2
                  </option>
                  <option
                    value="3"
                  >
                    3
                  </option>
                  <option
                    value="4"
                  >
                    4
                  </option>
                  <option
                    value="5"
                  >
                    5
                  </option>
                  <option
                    value="6"
                  >
                    6
                  </option>
                </select>
              </div>
            </div>
            <div
              className="tag-type has-single-tag"
            >
              <div
                className="heading"
              >
                <span
                  className="label"
                >
                  Time
                </span>
                <div
                  className="controls"
                />
              </div>
              <div
                className="tag"
              >
                <select
                  className="form-control"
                  onChange={[Function]}
                  value="long"
                >
                  <option
                    value="short"
                  >
                    Short
                  </option>
                  <option
                    value="medium"
                  >
                    Medium
                  </option>
                  <option
                    value="long"
                  >
                    Long
                  </option>
                </select>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        aria-hidden={true}
        aria-labelledby="exercise-parts-tab-assets"
        className="fade tab-pane"
        id="exercise-parts-tabpane-assets"
        role="tabpanel"
      >
        <div
          className="attachments"
        >
          <div
            className="attachment with-image"
          >
            <img
              className="preview"
              src="/attachments/1.png"
            />
            <textarea
              className="copypaste"
              readOnly={true}
              value="<img src=\\"/attachments/large_1.png\\" alt=\\"\\">"
            />
          </div>
          <div
            className="attachment with-image"
          >
            <img
              className="preview"
              src="/attachments/2.png"
            />
            <textarea
              className="copypaste"
              readOnly={true}
              value="<img src=\\"/attachments/large_2.png\\" alt=\\"\\">"
            />
          </div>
          <div
            className="attachment"
          >
            <div
              className="controls"
            >
              <label
                className="btn btn-secondary selector"
              >
                Add new image
                <input
                  className="file"
                  id="file"
                  onChange={[Function]}
                  type="file"
                />
              </label>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="c2"
  >
    <div
      className="c3"
    >
      <div
        className="c4"
        color="navy"
        hidden={false}
      >
        <div>
          READ ONLY
        </div>
        <div>
          Author: Alene
        </div>
      </div>
      <div
        className="openstax-exercise-preview exercise-editing-preview is-displaying-formats is-displaying-feedback card"
        data-exercise-id="1@1"
        tabIndex={-1}
      >
        <div
          className="card-body"
        >
          <div
            className="exercise-body"
          >
            <div>
              <div
                className="openstax-question openstax-question-preview"
              >
                <div
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "What conditions imply that we can use classical physics without considering special relativity or quantum mechanics?",
                    }
                  }
                />
                <div
                  className="answers-table"
                >
                  <div
                    className="openstax-answer"
                  >
                    <section
                      className="answers-answer disabled"
                      role="region"
                    >
                      <div
                        className="correct-incorrect"
                      />
                      <label
                        className="answer-label"
                        htmlFor="1-option-0"
                        onKeyPress={[Function]}
                      >
                        <span
                          className="answer-letter-wrapper"
                        >
                          <button
                            aria-label="Choice a:"
                            className="answer-letter"
                            data-test-id="answer-choice-a"
                            disabled={true}
                          >
                            a
                          </button>
                        </span>
                        <div
                          className="answer-answer"
                        >
                          <div
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "<ol>
  <li>matter is moving at speeds of less than roughly 1% the speed of light,</li>
  <li>objects are too small to be seen with the naked eye, and</li>
  <li>there is the involvement of only a weak gravitational field</li>
</ol>
",
                              }
                            }
                          />
                          <aside>
                            <div
                              dangerouslySetInnerHTML={
                                Object {
                                  "__html": "Objects far smaller than what is visible may require quantum mechanics.",
                                }
                              }
                            />
                          </aside>
                        </div>
                      </label>
                    </section>
                  </div>
                  <div
                    className="openstax-answer"
                  >
                    <section
                      className="answers-answer disabled"
                      role="region"
                    >
                      <div
                        className="correct-incorrect"
                      />
                      <label
                        className="answer-label"
                        htmlFor="1-option-1"
                        onKeyPress={[Function]}
                      >
                        <span
                          className="answer-letter-wrapper"
                        >
                          <button
                            aria-label="Choice b:"
                            className="answer-letter"
                            data-test-id="answer-choice-b"
                            disabled={true}
                          >
                            b
                          </button>
                        </span>
                        <div
                          className="answer-answer"
                        >
                          <div
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "<ol>
  <li>matter is moving at speeds greater than roughly 1% the speed of light,</li>
  <li>objects are large enough to be seen with the naked eye, and</li>
  <li>there is the involvement of a strong gravitational field</li>
</ol>
",
                              }
                            }
                          />
                          <aside>
                            <div
                              dangerouslySetInnerHTML={
                                Object {
                                  "__html": "Speeds greater than roughly 1% pf the speed of light start to involve significant effects from relativity.",
                                }
                              }
                            />
                          </aside>
                        </div>
                      </label>
                    </section>
                  </div>
                </div>
                <div
                  className="formats-listing"
                >
                  <div
                    className="header"
                  >
                    Formats:
                  </div>
                  <span>
                    free-response
                  </span>
                  <span>
                    multiple-choice
                  </span>
                </div>
                <div
                  className="detailed-solution"
                >
                  <div
                    className="header"
                  >
                    Detailed solution
                  </div>
                  <div
                    dangerouslySetInnerHTML={
                      Object {
                        "__html": "four",
                      }
                    }
                  />
                </div>
              </div>
            </div>
          </div>
          <div
            className="exercise-tags"
          >
            <span
              className="exercise-tag"
            >
              lo:stax-phys:1-2-1
            </span>
            <span
              className="exercise-tag"
            >
              blooms:3
            </span>
            <span
              className="exercise-tag"
            >
              book:stax-phys
            </span>
            <span
              className="exercise-tag"
            >
              context-cnxfeature:one-1
            </span>
            <span
              className="exercise-tag"
            >
              context-cnxmod:
            </span>
            <span
              className="exercise-tag"
            >
              dok:3
            </span>
            <span
              className="exercise-tag"
            >
              filter-type:test-prep
            </span>
            <span
              className="exercise-tag"
            >
              requires-context:true
            </span>
            <span
              className="exercise-tag"
            >
              time:long
            </span>
            <span
              className="exercise-tag"
            >
              type:conceptual
            </span>
            <span
              className="exercise-tag"
            >
              Nickname:maurine
            </span>
            <span
              className="exercise-tag"
            >
              ID:1@1
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Exercises component renders with intro and a multiple questions when exercise is MC 1`] = `
<div
  className="fade alert alert-danger show"
  role="alert"
>
  Exercise was not found
</div>
`;

exports[`Exercises component resets fields when model is new 1`] = `
"<MemoryRouter match={{...}}>
  <Router history={{...}}>
    <Exercise exercises={{...}} match={{...}}>
      <div className=\\"exercise-editor\\">
        <div className=\\"editing-controls\\">
          <Tabs id=\\"exercise-parts\\" activeKey=\\"question-0\\" onSelect={[Function: res]} defaultActiveKey=\\"question-0\\" variant=\\"tabs\\" mountOnEnter={false} unmountOnExit={false}>
            <TabContainer id=\\"exercise-parts\\" activeKey=\\"question-0\\" onSelect={[Function]} transition={[undefined]} mountOnEnter={false} unmountOnExit={false}>
              <Nav variant=\\"tabs\\" role=\\"tablist\\" as=\\"nav\\" justify={false} fill={false}>
                <ForwardRef as=\\"nav\\" activeKey={[undefined]} className=\\"nav nav-tabs\\" role=\\"tablist\\" onSelect={[Function]}>
                  <nav className=\\"nav nav-tabs\\" onKeyDown={[Function: handleKeyDown]} role=\\"tablist\\">
                    <NavItem as={{...}} eventKey=\\"question-0\\" disabled={[undefined]} className={[undefined]}>
                      <NavLink eventKey=\\"question-0\\" disabled={false} className=\\"nav-item\\" as={{...}}>
                        <ForwardRef href={[undefined]} eventKey=\\"question-0\\" as={{...}} disabled={false} onSelect={[undefined]} className=\\"nav-item nav-link\\">
                          <SafeAnchor href={[undefined]} disabled={false} role=\\"tab\\" data-rb-event-key=\\"question-0\\" id=\\"exercise-parts-tab-question-0\\" aria-controls=\\"exercise-parts-tabpane-question-0\\" tabIndex={[undefined]} aria-selected={true} onClick={[Function]} className=\\"nav-item nav-link active\\">
                            <a href=\\"#\\" role=\\"tab\\" data-rb-event-key=\\"question-0\\" id=\\"exercise-parts-tab-question-0\\" aria-controls=\\"exercise-parts-tabpane-question-0\\" tabIndex={[undefined]} aria-selected={true} onClick={[Function: handleClick]} className=\\"nav-item nav-link active\\" onKeyDown={[Function: handleKeyDown]}>
                              Question
                            </a>
                          </SafeAnchor>
                        </ForwardRef>
                      </NavLink>
                    </NavItem>
                    <NavItem as={{...}} eventKey=\\"tags\\" disabled={[undefined]} className={[undefined]}>
                      <NavLink eventKey=\\"tags\\" disabled={false} className=\\"nav-item\\" as={{...}}>
                        <ForwardRef href={[undefined]} eventKey=\\"tags\\" as={{...}} disabled={false} onSelect={[undefined]} className=\\"nav-item nav-link\\">
                          <SafeAnchor href={[undefined]} disabled={false} role=\\"tab\\" data-rb-event-key=\\"tags\\" id=\\"exercise-parts-tab-tags\\" aria-controls=\\"exercise-parts-tabpane-tags\\" tabIndex={-1} aria-selected={false} onClick={[Function]} className=\\"nav-item nav-link\\">
                            <a href=\\"#\\" role=\\"tab\\" data-rb-event-key=\\"tags\\" id=\\"exercise-parts-tab-tags\\" aria-controls=\\"exercise-parts-tabpane-tags\\" tabIndex={-1} aria-selected={false} onClick={[Function: handleClick]} className=\\"nav-item nav-link\\" onKeyDown={[Function: handleKeyDown]}>
                              Tags
                            </a>
                          </SafeAnchor>
                        </ForwardRef>
                      </NavLink>
                    </NavItem>
                    <NavItem as={{...}} eventKey=\\"assets\\" disabled={[undefined]} className={[undefined]}>
                      <NavLink eventKey=\\"assets\\" disabled={false} className=\\"nav-item\\" as={{...}}>
                        <ForwardRef href={[undefined]} eventKey=\\"assets\\" as={{...}} disabled={false} onSelect={[undefined]} className=\\"nav-item nav-link\\">
                          <SafeAnchor href={[undefined]} disabled={false} role=\\"tab\\" data-rb-event-key=\\"assets\\" id=\\"exercise-parts-tab-assets\\" aria-controls=\\"exercise-parts-tabpane-assets\\" tabIndex={-1} aria-selected={false} onClick={[Function]} className=\\"nav-item nav-link\\">
                            <a href=\\"#\\" role=\\"tab\\" data-rb-event-key=\\"assets\\" id=\\"exercise-parts-tab-assets\\" aria-controls=\\"exercise-parts-tabpane-assets\\" tabIndex={-1} aria-selected={false} onClick={[Function: handleClick]} className=\\"nav-item nav-link\\" onKeyDown={[Function: handleKeyDown]}>
                              Assets
                            </a>
                          </SafeAnchor>
                        </ForwardRef>
                      </NavLink>
                    </NavItem>
                  </nav>
                </ForwardRef>
              </Nav>
              <ForwardRef>
                <div className=\\"tab-content\\">
                  <TabPane eventKey=\\"question-0\\">
                    <Fade in={true} onEnter={[undefined]} onEntering={[undefined]} onEntered={[undefined]} onExit={[undefined]} onExiting={[undefined]} onExited={[undefined]} mountOnEnter={false} unmountOnExit={false} timeout={300} appear={false}>
                      <Transition addEndListener={[Function: transitionEnd]} in={true} onEnter={[Function]} onEntering={[Function: noop]} onEntered={[Function: noop]} onExit={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]} mountOnEnter={false} unmountOnExit={false} timeout={300} appear={false} enter={true} exit={true}>
                        <div id=\\"exercise-parts-tabpane-question-0\\" aria-labelledby=\\"exercise-parts-tab-question-0\\" role=\\"tabpanel\\" aria-hidden={false} className=\\"fade tab-pane active show\\">
                          <div className=\\"nickname\\">
                            <label>
                              Exercise Nickname:
                              <input onChange={[Function: res]} value=\\"desmond\\" />
                            </label>
                          </div>
                          <Question onRemove={[Function: onRemove]} onMove={[Function: onMove]} question={{...}}>
                            <div className=\\"question\\">
                              <QuestionFormatType question={{...}}>
                                <div className=\\"format-type\\">
                                  <div>
                                    <input type=\\"radio\\" id=\\"input-multiple-choice\\" name=\\"0-formats\\" value=\\"multiple-choice\\" onChange={[Function: res]} checked={true} />
                                    <label htmlFor=\\"input-multiple-choice\\">
                                      Multiple Choice
                                    </label>
                                  </div>
                                  <div>
                                    <input type=\\"radio\\" id=\\"input-true-false\\" name=\\"0-formats\\" value=\\"true-false\\" onChange={[Function: res]} checked={false} />
                                    <label htmlFor=\\"input-true-false\\">
                                      True/False
                                    </label>
                                  </div>
                                  <div className=\\"multi-choice-boxes\\">
                                    <div className=\\"requires-choices\\">
                                      <input type=\\"checkbox\\" id=\\"input-rq\\" checked={false} onChange={[Function: res]} />
                                      <label htmlFor=\\"input-rq\\">
                                        Requires Choices
                                      </label>
                                    </div>
                                    <div className=\\"order-matters\\">
                                      <input type=\\"checkbox\\" id=\\"input-om\\" checked={false} onChange={[Function: res]} />
                                      <label htmlFor=\\"input-om\\">
                                        Order Matters
                                      </label>
                                    </div>
                                  </div>
                                </div>
                              </QuestionFormatType>
                              <div className=\\"question-stimulus\\">
                                <label>
                                  Question Stimulus
                                </label>
                                <textarea onChange={[Function: res]} defaultValue=\\"\\" />
                              </div>
                              <div>
                                <label>
                                  Question Stem
                                </label>
                                <textarea onChange={[Function: res]} value=\\"What conditions imply that we can use classical physics without considering special relativity or quantum mechanics?\\" />
                              </div>
                              <div>
                                <label>
                                  Answers
                                </label>
                                <Icon tooltip=\\"Add New\\" type=\\"plus-square\\" onClick={[Function: res]} buttonProps={{...}} tooltipProps={{...}}>
                                  <OverlayTrigger placement=\\"auto\\" trigger={{...}} overlay={{...}} defaultOverlayShown={false}>
                                    <RefHolder>
                                      <Button variant=\\"plain\\" className=\\"ox-icon-plus-square\\" onClick={[Function: res]} active={false} disabled={false} type=\\"button\\" onFocus={[Function]} onBlur={[Function]} onMouseOver={[Function]} onMouseOut={[Function]}>
                                        <button onClick={[Function: res]} disabled={false} onFocus={[Function]} onBlur={[Function]} onMouseOver={[Function]} onMouseOut={[Function]} type=\\"button\\" className=\\"ox-icon-plus-square btn btn-plain\\">
                                          <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-plus-square\\" icon={{...}}>
                                            <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-plus-square\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                              <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"plus-square\\" className=\\"svg-inline--fa fa-plus-square fa-w-14 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-plus-square\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 448 512\\" style={{...}} data-variant={[undefined]}>
                                                <path fill=\\"currentColor\\" d=\\"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z\\" style={{...}} />
                                              </svg>
                                            </FontAwesomeIcon>
                                          </IconWrapper>
                                        </button>
                                      </Button>
                                    </RefHolder>
                                    <Overlay placement=\\"auto\\" defaultOverlayShown={false} popperConfig={{...}} show={false} onHide={[Function]} target={[Function]} transition={{...}} rootClose={false}>
                                      <Overlay placement=\\"auto\\" defaultOverlayShown={false} popperConfig={{...}} show={false} onHide={[Function]} target={[Function]} rootClose={false} transition={{...}} containerPadding={5} />
                                    </Overlay>
                                  </OverlayTrigger>
                                </Icon>
                                <ol className=\\"answer-choices\\">
                                  <Answer answer={{...}} canMoveUp={true} canMoveDown={false} moveAnswer={[Function: res]} changeCorrect={[Function: res]} removeAnswer={[Function: res]} changeAnswer={[undefined]}>
                                    <li className=\\"answer correct-answer\\">
                                      <div className=\\"answer-actions\\">
                                        <label>
                                          Distractor
                                        </label>
                                        <Icon type=\\"check-circle\\" className=\\"is-correct\\" color=\\"green\\" onClick={[Function: wrapper]} buttonProps={{...}} tooltipProps={{...}}>
                                          <Button variant=\\"plain\\" className=\\"ox-icon-check-circle is-correct\\" onClick={[Function: wrapper]} active={false} disabled={false} type=\\"button\\">
                                            <button onClick={[Function: wrapper]} disabled={false} type=\\"button\\" className=\\"ox-icon-check-circle is-correct btn btn-plain\\">
                                              <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-check-circle is-correct\\" color=\\"green\\" icon={{...}}>
                                                <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-check-circle is-correct\\" color=\\"green\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                  <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"check-circle\\" className=\\"svg-inline--fa fa-check-circle fa-w-16 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-check-circle is-correct\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}} data-variant={[undefined]} color=\\"green\\">
                                                    <path fill=\\"currentColor\\" d=\\"M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z\\" style={{...}} />
                                                  </svg>
                                                </FontAwesomeIcon>
                                              </IconWrapper>
                                            </button>
                                          </Button>
                                        </Icon>
                                        <Icon onClick={[Function: wrapper]} type=\\"arrow-circle-down\\" buttonProps={{...}} tooltipProps={{...}}>
                                          <Button variant=\\"plain\\" className=\\"ox-icon-arrow-circle-down\\" onClick={[Function: wrapper]} active={false} disabled={false} type=\\"button\\">
                                            <button onClick={[Function: wrapper]} disabled={false} type=\\"button\\" className=\\"ox-icon-arrow-circle-down btn btn-plain\\">
                                              <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-arrow-circle-down\\" icon={{...}}>
                                                <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-arrow-circle-down\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                  <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"arrow-circle-down\\" className=\\"svg-inline--fa fa-arrow-circle-down fa-w-16 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-arrow-circle-down\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}} data-variant={[undefined]}>
                                                    <path fill=\\"currentColor\\" d=\\"M504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-143.6-28.9L288 302.6V120c0-13.3-10.7-24-24-24h-16c-13.3 0-24 10.7-24 24v182.6l-72.4-75.5c-9.3-9.7-24.8-9.9-34.3-.4l-10.9 11c-9.4 9.4-9.4 24.6 0 33.9L239 404.3c9.4 9.4 24.6 9.4 33.9 0l132.7-132.7c9.4-9.4 9.4-24.6 0-33.9l-10.9-11c-9.5-9.5-25-9.3-34.3.4z\\" style={{...}} />
                                                  </svg>
                                                </FontAwesomeIcon>
                                              </IconWrapper>
                                            </button>
                                          </Button>
                                        </Icon>
                                        <Icon type=\\"ban\\" onClick={[Function: wrapper]} buttonProps={{...}} tooltipProps={{...}}>
                                          <Button variant=\\"plain\\" className=\\"ox-icon-ban\\" onClick={[Function: wrapper]} active={false} disabled={false} type=\\"button\\">
                                            <button onClick={[Function: wrapper]} disabled={false} type=\\"button\\" className=\\"ox-icon-ban btn btn-plain\\">
                                              <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-ban\\" icon={{...}}>
                                                <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-ban\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                  <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"ban\\" className=\\"svg-inline--fa fa-ban fa-w-16 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-ban\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}} data-variant={[undefined]}>
                                                    <path fill=\\"currentColor\\" d=\\"M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z\\" style={{...}} />
                                                  </svg>
                                                </FontAwesomeIcon>
                                              </IconWrapper>
                                            </button>
                                          </Button>
                                        </Icon>
                                      </div>
                                      <textarea onChange={[Function: res]} value=\\"<ol>\\\\n  <li>matter is moving at speeds of less than roughly 1% the speed of light,</li>\\\\n  <li>objects are large enough to be seen with the naked eye, and</li>\\\\n  <li>there is the involvement of a strong gravitational field</li>\\\\n</ol>\\\\n\\" />
                                      <label>
                                        Choice-Level Feedback
                                      </label>
                                      <textarea onChange={[Function: res]} value=\\"A high gravitational field distorts space-time and leads to phenomena that classical physics fails to explain.\\" />
                                    </li>
                                  </Answer>
                                  <Answer answer={{...}} canMoveUp={true} canMoveDown={true} moveAnswer={[Function: res]} changeCorrect={[Function: res]} removeAnswer={[Function: res]} changeAnswer={[undefined]}>
                                    <li className=\\"answer\\">
                                      <div className=\\"answer-actions\\">
                                        <label>
                                          Distractor
                                        </label>
                                        <Icon type=\\"check-circle\\" className=\\"is-correct\\" color=\\"lightGray\\" onClick={[Function: wrapper]} buttonProps={{...}} tooltipProps={{...}}>
                                          <Button variant=\\"plain\\" className=\\"ox-icon-check-circle is-correct\\" onClick={[Function: wrapper]} active={false} disabled={false} type=\\"button\\">
                                            <button onClick={[Function: wrapper]} disabled={false} type=\\"button\\" className=\\"ox-icon-check-circle is-correct btn btn-plain\\">
                                              <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-check-circle is-correct\\" color=\\"lightGray\\" icon={{...}}>
                                                <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-check-circle is-correct\\" color=\\"lightGray\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                  <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"check-circle\\" className=\\"svg-inline--fa fa-check-circle fa-w-16 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-check-circle is-correct\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}} data-variant={[undefined]} color=\\"lightGray\\">
                                                    <path fill=\\"currentColor\\" d=\\"M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z\\" style={{...}} />
                                                  </svg>
                                                </FontAwesomeIcon>
                                              </IconWrapper>
                                            </button>
                                          </Button>
                                        </Icon>
                                        <Icon onClick={[Function: wrapper]} type=\\"arrow-circle-down\\" buttonProps={{...}} tooltipProps={{...}}>
                                          <Button variant=\\"plain\\" className=\\"ox-icon-arrow-circle-down\\" onClick={[Function: wrapper]} active={false} disabled={false} type=\\"button\\">
                                            <button onClick={[Function: wrapper]} disabled={false} type=\\"button\\" className=\\"ox-icon-arrow-circle-down btn btn-plain\\">
                                              <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-arrow-circle-down\\" icon={{...}}>
                                                <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-arrow-circle-down\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                  <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"arrow-circle-down\\" className=\\"svg-inline--fa fa-arrow-circle-down fa-w-16 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-arrow-circle-down\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}} data-variant={[undefined]}>
                                                    <path fill=\\"currentColor\\" d=\\"M504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-143.6-28.9L288 302.6V120c0-13.3-10.7-24-24-24h-16c-13.3 0-24 10.7-24 24v182.6l-72.4-75.5c-9.3-9.7-24.8-9.9-34.3-.4l-10.9 11c-9.4 9.4-9.4 24.6 0 33.9L239 404.3c9.4 9.4 24.6 9.4 33.9 0l132.7-132.7c9.4-9.4 9.4-24.6 0-33.9l-10.9-11c-9.5-9.5-25-9.3-34.3.4z\\" style={{...}} />
                                                  </svg>
                                                </FontAwesomeIcon>
                                              </IconWrapper>
                                            </button>
                                          </Button>
                                        </Icon>
                                        <Icon type=\\"arrow-circle-up\\" onClick={[Function: wrapper]} buttonProps={{...}} tooltipProps={{...}}>
                                          <Button variant=\\"plain\\" className=\\"ox-icon-arrow-circle-up\\" onClick={[Function: wrapper]} active={false} disabled={false} type=\\"button\\">
                                            <button onClick={[Function: wrapper]} disabled={false} type=\\"button\\" className=\\"ox-icon-arrow-circle-up btn btn-plain\\">
                                              <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-arrow-circle-up\\" icon={{...}}>
                                                <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-arrow-circle-up\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                  <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"arrow-circle-up\\" className=\\"svg-inline--fa fa-arrow-circle-up fa-w-16 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-arrow-circle-up\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}} data-variant={[undefined]}>
                                                    <path fill=\\"currentColor\\" d=\\"M8 256C8 119 119 8 256 8s248 111 248 248-111 248-248 248S8 393 8 256zm143.6 28.9l72.4-75.5V392c0 13.3 10.7 24 24 24h16c13.3 0 24-10.7 24-24V209.4l72.4 75.5c9.3 9.7 24.8 9.9 34.3.4l10.9-11c9.4-9.4 9.4-24.6 0-33.9L273 107.7c-9.4-9.4-24.6-9.4-33.9 0L106.3 240.4c-9.4 9.4-9.4 24.6 0 33.9l10.9 11c9.6 9.5 25.1 9.3 34.4-.4z\\" style={{...}} />
                                                  </svg>
                                                </FontAwesomeIcon>
                                              </IconWrapper>
                                            </button>
                                          </Button>
                                        </Icon>
                                        <Icon type=\\"ban\\" onClick={[Function: wrapper]} buttonProps={{...}} tooltipProps={{...}}>
                                          <Button variant=\\"plain\\" className=\\"ox-icon-ban\\" onClick={[Function: wrapper]} active={false} disabled={false} type=\\"button\\">
                                            <button onClick={[Function: wrapper]} disabled={false} type=\\"button\\" className=\\"ox-icon-ban btn btn-plain\\">
                                              <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-ban\\" icon={{...}}>
                                                <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-ban\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                  <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"ban\\" className=\\"svg-inline--fa fa-ban fa-w-16 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-ban\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}} data-variant={[undefined]}>
                                                    <path fill=\\"currentColor\\" d=\\"M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z\\" style={{...}} />
                                                  </svg>
                                                </FontAwesomeIcon>
                                              </IconWrapper>
                                            </button>
                                          </Button>
                                        </Icon>
                                      </div>
                                      <textarea onChange={[Function: res]} value=\\"<ol>\\\\n  <li>matter is moving at speeds of less than roughly 1% the speed of light,</li>\\\\n  <li>objects are large enough to be seen with the naked eye, and</li>\\\\n  <li>there is the involvement of a weak gravitational field</li>\\\\n</ol>\\\\n\\" />
                                      <label>
                                        Choice-Level Feedback
                                      </label>
                                      <textarea onChange={[Function: res]} value=\\"Classical physics involves weak gravitational fields and objects big enough to be seen with the naked eye with their motional speed much less than the speed of light. Also, it is a subset of the Einstein’s theory of relativity where not only weak gravitational field but also strong gravity influences are studied.\\" />
                                    </li>
                                  </Answer>
                                  <Answer answer={{...}} canMoveUp={true} canMoveDown={true} moveAnswer={[Function: res]} changeCorrect={[Function: res]} removeAnswer={[Function: res]} changeAnswer={[undefined]}>
                                    <li className=\\"answer\\">
                                      <div className=\\"answer-actions\\">
                                        <label>
                                          Distractor
                                        </label>
                                        <Icon type=\\"check-circle\\" className=\\"is-correct\\" color=\\"lightGray\\" onClick={[Function: wrapper]} buttonProps={{...}} tooltipProps={{...}}>
                                          <Button variant=\\"plain\\" className=\\"ox-icon-check-circle is-correct\\" onClick={[Function: wrapper]} active={false} disabled={false} type=\\"button\\">
                                            <button onClick={[Function: wrapper]} disabled={false} type=\\"button\\" className=\\"ox-icon-check-circle is-correct btn btn-plain\\">
                                              <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-check-circle is-correct\\" color=\\"lightGray\\" icon={{...}}>
                                                <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-check-circle is-correct\\" color=\\"lightGray\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                  <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"check-circle\\" className=\\"svg-inline--fa fa-check-circle fa-w-16 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-check-circle is-correct\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}} data-variant={[undefined]} color=\\"lightGray\\">
                                                    <path fill=\\"currentColor\\" d=\\"M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z\\" style={{...}} />
                                                  </svg>
                                                </FontAwesomeIcon>
                                              </IconWrapper>
                                            </button>
                                          </Button>
                                        </Icon>
                                        <Icon onClick={[Function: wrapper]} type=\\"arrow-circle-down\\" buttonProps={{...}} tooltipProps={{...}}>
                                          <Button variant=\\"plain\\" className=\\"ox-icon-arrow-circle-down\\" onClick={[Function: wrapper]} active={false} disabled={false} type=\\"button\\">
                                            <button onClick={[Function: wrapper]} disabled={false} type=\\"button\\" className=\\"ox-icon-arrow-circle-down btn btn-plain\\">
                                              <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-arrow-circle-down\\" icon={{...}}>
                                                <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-arrow-circle-down\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                  <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"arrow-circle-down\\" className=\\"svg-inline--fa fa-arrow-circle-down fa-w-16 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-arrow-circle-down\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}} data-variant={[undefined]}>
                                                    <path fill=\\"currentColor\\" d=\\"M504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-143.6-28.9L288 302.6V120c0-13.3-10.7-24-24-24h-16c-13.3 0-24 10.7-24 24v182.6l-72.4-75.5c-9.3-9.7-24.8-9.9-34.3-.4l-10.9 11c-9.4 9.4-9.4 24.6 0 33.9L239 404.3c9.4 9.4 24.6 9.4 33.9 0l132.7-132.7c9.4-9.4 9.4-24.6 0-33.9l-10.9-11c-9.5-9.5-25-9.3-34.3.4z\\" style={{...}} />
                                                  </svg>
                                                </FontAwesomeIcon>
                                              </IconWrapper>
                                            </button>
                                          </Button>
                                        </Icon>
                                        <Icon type=\\"arrow-circle-up\\" onClick={[Function: wrapper]} buttonProps={{...}} tooltipProps={{...}}>
                                          <Button variant=\\"plain\\" className=\\"ox-icon-arrow-circle-up\\" onClick={[Function: wrapper]} active={false} disabled={false} type=\\"button\\">
                                            <button onClick={[Function: wrapper]} disabled={false} type=\\"button\\" className=\\"ox-icon-arrow-circle-up btn btn-plain\\">
                                              <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-arrow-circle-up\\" icon={{...}}>
                                                <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-arrow-circle-up\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                  <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"arrow-circle-up\\" className=\\"svg-inline--fa fa-arrow-circle-up fa-w-16 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-arrow-circle-up\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}} data-variant={[undefined]}>
                                                    <path fill=\\"currentColor\\" d=\\"M8 256C8 119 119 8 256 8s248 111 248 248-111 248-248 248S8 393 8 256zm143.6 28.9l72.4-75.5V392c0 13.3 10.7 24 24 24h16c13.3 0 24-10.7 24-24V209.4l72.4 75.5c9.3 9.7 24.8 9.9 34.3.4l10.9-11c9.4-9.4 9.4-24.6 0-33.9L273 107.7c-9.4-9.4-24.6-9.4-33.9 0L106.3 240.4c-9.4 9.4-9.4 24.6 0 33.9l10.9 11c9.6 9.5 25.1 9.3 34.4-.4z\\" style={{...}} />
                                                  </svg>
                                                </FontAwesomeIcon>
                                              </IconWrapper>
                                            </button>
                                          </Button>
                                        </Icon>
                                        <Icon type=\\"ban\\" onClick={[Function: wrapper]} buttonProps={{...}} tooltipProps={{...}}>
                                          <Button variant=\\"plain\\" className=\\"ox-icon-ban\\" onClick={[Function: wrapper]} active={false} disabled={false} type=\\"button\\">
                                            <button onClick={[Function: wrapper]} disabled={false} type=\\"button\\" className=\\"ox-icon-ban btn btn-plain\\">
                                              <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-ban\\" icon={{...}}>
                                                <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-ban\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                  <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"ban\\" className=\\"svg-inline--fa fa-ban fa-w-16 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-ban\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}} data-variant={[undefined]}>
                                                    <path fill=\\"currentColor\\" d=\\"M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z\\" style={{...}} />
                                                  </svg>
                                                </FontAwesomeIcon>
                                              </IconWrapper>
                                            </button>
                                          </Button>
                                        </Icon>
                                      </div>
                                      <textarea onChange={[Function: res]} value=\\"<ol>\\\\n  <li>matter is moving at speeds of less than roughly 1% the speed of light,</li>\\\\n  <li>objects are too small to be seen with the naked eye, and</li>\\\\n  <li>there is the involvement of only a weak gravitational field</li>\\\\n</ol>\\\\n\\" />
                                      <label>
                                        Choice-Level Feedback
                                      </label>
                                      <textarea onChange={[Function: res]} value=\\"Objects far smaller than what is visible may require quantum mechanics.\\" />
                                    </li>
                                  </Answer>
                                  <Answer answer={{...}} canMoveUp={true} canMoveDown={true} moveAnswer={[Function: res]} changeCorrect={[Function: res]} removeAnswer={[Function: res]} changeAnswer={[undefined]}>
                                    <li className=\\"answer\\">
                                      <div className=\\"answer-actions\\">
                                        <label>
                                          Distractor
                                        </label>
                                        <Icon type=\\"check-circle\\" className=\\"is-correct\\" color=\\"lightGray\\" onClick={[Function: wrapper]} buttonProps={{...}} tooltipProps={{...}}>
                                          <Button variant=\\"plain\\" className=\\"ox-icon-check-circle is-correct\\" onClick={[Function: wrapper]} active={false} disabled={false} type=\\"button\\">
                                            <button onClick={[Function: wrapper]} disabled={false} type=\\"button\\" className=\\"ox-icon-check-circle is-correct btn btn-plain\\">
                                              <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-check-circle is-correct\\" color=\\"lightGray\\" icon={{...}}>
                                                <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-check-circle is-correct\\" color=\\"lightGray\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                  <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"check-circle\\" className=\\"svg-inline--fa fa-check-circle fa-w-16 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-check-circle is-correct\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}} data-variant={[undefined]} color=\\"lightGray\\">
                                                    <path fill=\\"currentColor\\" d=\\"M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z\\" style={{...}} />
                                                  </svg>
                                                </FontAwesomeIcon>
                                              </IconWrapper>
                                            </button>
                                          </Button>
                                        </Icon>
                                        <Icon onClick={[Function: wrapper]} type=\\"arrow-circle-down\\" buttonProps={{...}} tooltipProps={{...}}>
                                          <Button variant=\\"plain\\" className=\\"ox-icon-arrow-circle-down\\" onClick={[Function: wrapper]} active={false} disabled={false} type=\\"button\\">
                                            <button onClick={[Function: wrapper]} disabled={false} type=\\"button\\" className=\\"ox-icon-arrow-circle-down btn btn-plain\\">
                                              <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-arrow-circle-down\\" icon={{...}}>
                                                <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-arrow-circle-down\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                  <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"arrow-circle-down\\" className=\\"svg-inline--fa fa-arrow-circle-down fa-w-16 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-arrow-circle-down\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}} data-variant={[undefined]}>
                                                    <path fill=\\"currentColor\\" d=\\"M504 256c0 137-111 248-248 248S8 393 8 256 119 8 256 8s248 111 248 248zm-143.6-28.9L288 302.6V120c0-13.3-10.7-24-24-24h-16c-13.3 0-24 10.7-24 24v182.6l-72.4-75.5c-9.3-9.7-24.8-9.9-34.3-.4l-10.9 11c-9.4 9.4-9.4 24.6 0 33.9L239 404.3c9.4 9.4 24.6 9.4 33.9 0l132.7-132.7c9.4-9.4 9.4-24.6 0-33.9l-10.9-11c-9.5-9.5-25-9.3-34.3.4z\\" style={{...}} />
                                                  </svg>
                                                </FontAwesomeIcon>
                                              </IconWrapper>
                                            </button>
                                          </Button>
                                        </Icon>
                                        <Icon type=\\"arrow-circle-up\\" onClick={[Function: wrapper]} buttonProps={{...}} tooltipProps={{...}}>
                                          <Button variant=\\"plain\\" className=\\"ox-icon-arrow-circle-up\\" onClick={[Function: wrapper]} active={false} disabled={false} type=\\"button\\">
                                            <button onClick={[Function: wrapper]} disabled={false} type=\\"button\\" className=\\"ox-icon-arrow-circle-up btn btn-plain\\">
                                              <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-arrow-circle-up\\" icon={{...}}>
                                                <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-arrow-circle-up\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                  <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"arrow-circle-up\\" className=\\"svg-inline--fa fa-arrow-circle-up fa-w-16 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-arrow-circle-up\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}} data-variant={[undefined]}>
                                                    <path fill=\\"currentColor\\" d=\\"M8 256C8 119 119 8 256 8s248 111 248 248-111 248-248 248S8 393 8 256zm143.6 28.9l72.4-75.5V392c0 13.3 10.7 24 24 24h16c13.3 0 24-10.7 24-24V209.4l72.4 75.5c9.3 9.7 24.8 9.9 34.3.4l10.9-11c9.4-9.4 9.4-24.6 0-33.9L273 107.7c-9.4-9.4-24.6-9.4-33.9 0L106.3 240.4c-9.4 9.4-9.4 24.6 0 33.9l10.9 11c9.6 9.5 25.1 9.3 34.4-.4z\\" style={{...}} />
                                                  </svg>
                                                </FontAwesomeIcon>
                                              </IconWrapper>
                                            </button>
                                          </Button>
                                        </Icon>
                                        <Icon type=\\"ban\\" onClick={[Function: wrapper]} buttonProps={{...}} tooltipProps={{...}}>
                                          <Button variant=\\"plain\\" className=\\"ox-icon-ban\\" onClick={[Function: wrapper]} active={false} disabled={false} type=\\"button\\">
                                            <button onClick={[Function: wrapper]} disabled={false} type=\\"button\\" className=\\"ox-icon-ban btn btn-plain\\">
                                              <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-ban\\" icon={{...}}>
                                                <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-ban\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                  <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"ban\\" className=\\"svg-inline--fa fa-ban fa-w-16 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-ban\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}} data-variant={[undefined]}>
                                                    <path fill=\\"currentColor\\" d=\\"M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z\\" style={{...}} />
                                                  </svg>
                                                </FontAwesomeIcon>
                                              </IconWrapper>
                                            </button>
                                          </Button>
                                        </Icon>
                                      </div>
                                      <textarea onChange={[Function: res]} value=\\"<ol>\\\\n  <li>matter is moving at speeds greater than roughly 1% the speed of light,</li>\\\\n  <li>objects are large enough to be seen with the naked eye, and</li>\\\\n  <li>there is the involvement of a strong gravitational field</li>\\\\n</ol>\\\\n\\" />
                                      <label>
                                        Choice-Level Feedback
                                      </label>
                                      <textarea onChange={[Function: res]} value=\\"Speeds greater than roughly 1% pf the speed of light start to involve significant effects from relativity.\\" />
                                    </li>
                                  </Answer>
                                  <Answer answer={{...}} canMoveUp={false} canMoveDown={true} moveAnswer={[Function: res]} changeCorrect={[Function: res]} removeAnswer={[Function: res]} changeAnswer={[undefined]}>
                                    <li className=\\"answer\\">
                                      <div className=\\"answer-actions\\">
                                        <label>
                                          Distractor
                                        </label>
                                        <Icon type=\\"check-circle\\" className=\\"is-correct\\" color=\\"lightGray\\" onClick={[Function: wrapper]} buttonProps={{...}} tooltipProps={{...}}>
                                          <Button variant=\\"plain\\" className=\\"ox-icon-check-circle is-correct\\" onClick={[Function: wrapper]} active={false} disabled={false} type=\\"button\\">
                                            <button onClick={[Function: wrapper]} disabled={false} type=\\"button\\" className=\\"ox-icon-check-circle is-correct btn btn-plain\\">
                                              <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-check-circle is-correct\\" color=\\"lightGray\\" icon={{...}}>
                                                <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-check-circle is-correct\\" color=\\"lightGray\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                  <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"check-circle\\" className=\\"svg-inline--fa fa-check-circle fa-w-16 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-check-circle is-correct\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}} data-variant={[undefined]} color=\\"lightGray\\">
                                                    <path fill=\\"currentColor\\" d=\\"M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z\\" style={{...}} />
                                                  </svg>
                                                </FontAwesomeIcon>
                                              </IconWrapper>
                                            </button>
                                          </Button>
                                        </Icon>
                                        <Icon type=\\"arrow-circle-up\\" onClick={[Function: wrapper]} buttonProps={{...}} tooltipProps={{...}}>
                                          <Button variant=\\"plain\\" className=\\"ox-icon-arrow-circle-up\\" onClick={[Function: wrapper]} active={false} disabled={false} type=\\"button\\">
                                            <button onClick={[Function: wrapper]} disabled={false} type=\\"button\\" className=\\"ox-icon-arrow-circle-up btn btn-plain\\">
                                              <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-arrow-circle-up\\" icon={{...}}>
                                                <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-arrow-circle-up\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                  <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"arrow-circle-up\\" className=\\"svg-inline--fa fa-arrow-circle-up fa-w-16 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-arrow-circle-up\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}} data-variant={[undefined]}>
                                                    <path fill=\\"currentColor\\" d=\\"M8 256C8 119 119 8 256 8s248 111 248 248-111 248-248 248S8 393 8 256zm143.6 28.9l72.4-75.5V392c0 13.3 10.7 24 24 24h16c13.3 0 24-10.7 24-24V209.4l72.4 75.5c9.3 9.7 24.8 9.9 34.3.4l10.9-11c9.4-9.4 9.4-24.6 0-33.9L273 107.7c-9.4-9.4-24.6-9.4-33.9 0L106.3 240.4c-9.4 9.4-9.4 24.6 0 33.9l10.9 11c9.6 9.5 25.1 9.3 34.4-.4z\\" style={{...}} />
                                                  </svg>
                                                </FontAwesomeIcon>
                                              </IconWrapper>
                                            </button>
                                          </Button>
                                        </Icon>
                                        <Icon type=\\"ban\\" onClick={[Function: wrapper]} buttonProps={{...}} tooltipProps={{...}}>
                                          <Button variant=\\"plain\\" className=\\"ox-icon-ban\\" onClick={[Function: wrapper]} active={false} disabled={false} type=\\"button\\">
                                            <button onClick={[Function: wrapper]} disabled={false} type=\\"button\\" className=\\"ox-icon-ban btn btn-plain\\">
                                              <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-ban\\" icon={{...}}>
                                                <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-ban\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                  <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"ban\\" className=\\"svg-inline--fa fa-ban fa-w-16 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-ban\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}} data-variant={[undefined]}>
                                                    <path fill=\\"currentColor\\" d=\\"M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z\\" style={{...}} />
                                                  </svg>
                                                </FontAwesomeIcon>
                                              </IconWrapper>
                                            </button>
                                          </Button>
                                        </Icon>
                                      </div>
                                      <textarea onChange={[Function: res]} value=\\"<ol>\\\\n  <li>matter is moving at speeds of less than roughly 1% the speed of light,</li>\\\\n  <li>objects are large enough to be seen with the naked eye, and</li>\\\\n  <li>there is the involvement of a strong gravitational field</li>\\\\n</ol>\\\\n\\" />
                                      <label>
                                        Choice-Level Feedback
                                      </label>
                                      <textarea onChange={[Function: res]} value=\\"A high gravitational field distorts space-time and leads to phenomena that classical physics fails to explain.\\" />
                                    </li>
                                  </Answer>
                                </ol>
                              </div>
                              <div>
                                <label>
                                  Detailed Solution
                                </label>
                                <textarea onChange={[Function: res]} value=\\"four\\" />
                              </div>
                            </div>
                          </Question>
                        </div>
                      </Transition>
                    </Fade>
                  </TabPane>
                  <TabPane eventKey=\\"tags\\">
                    <Fade in={false} onEnter={[undefined]} onEntering={[undefined]} onEntered={[undefined]} onExit={[undefined]} onExiting={[undefined]} onExited={[undefined]} mountOnEnter={false} unmountOnExit={false} timeout={300} appear={false}>
                      <Transition addEndListener={[Function: transitionEnd]} in={false} onEnter={[Function]} onEntering={[Function: noop]} onEntered={[Function: noop]} onExit={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]} mountOnEnter={false} unmountOnExit={false} timeout={300} appear={false} enter={true} exit={true}>
                        <div id=\\"exercise-parts-tabpane-tags\\" aria-labelledby=\\"exercise-parts-tab-tags\\" role=\\"tabpanel\\" aria-hidden={true} className=\\"fade tab-pane\\">
                          <ExerciseTags exercise={{...}}>
                            <div className=\\"tags-panel\\">
                              <div className=\\"tags\\">
                                <BookTags exercise={{...}}>
                                  <TagWrapper label=\\"Book\\" onAdd={[Function: res]} singleTag={true}>
                                    <div className=\\"tag-type has-single-tag\\">
                                      <div className=\\"heading\\">
                                        <span className=\\"label\\">
                                          Book
                                        </span>
                                        <div className=\\"controls\\">
                                          <Icon onClick={[Function: res]} type=\\"plus-circle\\" buttonProps={{...}} tooltipProps={{...}}>
                                            <Button variant=\\"plain\\" className=\\"ox-icon-plus-circle\\" onClick={[Function: res]} active={false} disabled={false} type=\\"button\\">
                                              <button onClick={[Function: res]} disabled={false} type=\\"button\\" className=\\"ox-icon-plus-circle btn btn-plain\\">
                                                <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-plus-circle\\" icon={{...}}>
                                                  <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-plus-circle\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                    <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"plus-circle\\" className=\\"svg-inline--fa fa-plus-circle fa-w-16 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-plus-circle\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}} data-variant={[undefined]}>
                                                      <path fill=\\"currentColor\\" d=\\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z\\" style={{...}} />
                                                    </svg>
                                                  </FontAwesomeIcon>
                                                </IconWrapper>
                                              </button>
                                            </Button>
                                          </Icon>
                                        </div>
                                      </div>
                                      <BookTagSelect exercise={{...}} tag={{...}}>
                                        <div className=\\"tag\\">
                                          <BookSelection onChange={[Function: res]} selected=\\"stax-phys\\" limit={{...}}>
                                            <select className=\\"form-control\\" onChange={[Function: res]} value=\\"stax-phys\\">
                                              <option value=\\"stax-anp\\">
                                                Anatomy and Physiology
                                              </option>
                                              <option value=\\"stax-apbio\\">
                                                Biology for AP® Courses
                                              </option>
                                              <option value=\\"stax-bio\\">
                                                Biology
                                              </option>
                                              <option value=\\"stax-apphys\\">
                                                College Physics for AP® Courses
                                              </option>
                                              <option value=\\"stax-phys\\">
                                                College Physics
                                              </option>
                                              <option value=\\"stax-cbio\\">
                                                Concepts of Biology
                                              </option>
                                              <option value=\\"stax-econ\\">
                                                Economics
                                              </option>
                                              <option value=\\"stax-eship\\">
                                                Entrepreneurship
                                              </option>
                                              <option value=\\"stax-macro\\">
                                                Macro Economics
                                              </option>
                                              <option value=\\"stax-micro\\">
                                                Micro Economics
                                              </option>
                                              <option value=\\"stax-k12phys\\">
                                                HS Physics
                                              </option>
                                              <option value=\\"stax-psy\\">
                                                Psychology
                                              </option>
                                              <option value=\\"stax-soc\\">
                                                Sociology
                                              </option>
                                              <option value=\\"stax-apush\\">
                                                U.S. History for AP® Courses
                                              </option>
                                            </select>
                                          </BookSelection>
                                          <span className=\\"controls\\">
                                            <Icon onClick={[Function: res]} type=\\"trash\\" buttonProps={{...}} tooltipProps={{...}}>
                                              <Button variant=\\"plain\\" className=\\"ox-icon-trash\\" onClick={[Function: res]} active={false} disabled={false} type=\\"button\\">
                                                <button onClick={[Function: res]} disabled={false} type=\\"button\\" className=\\"ox-icon-trash btn btn-plain\\">
                                                  <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-trash\\" icon={{...}}>
                                                    <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-trash\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                      <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"trash-alt\\" className=\\"svg-inline--fa fa-trash-alt fa-w-14 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-trash\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 448 512\\" style={{...}} data-variant={[undefined]}>
                                                        <path fill=\\"currentColor\\" d=\\"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\\" style={{...}} />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                  </IconWrapper>
                                                </button>
                                              </Button>
                                            </Icon>
                                          </span>
                                        </div>
                                      </BookTagSelect>
                                    </div>
                                  </TagWrapper>
                                </BookTags>
                                <LoTags exercise={{...}}>
                                  <TagWrapper label=\\"LO\\" onAdd={[Function: res]}>
                                    <div className=\\"tag-type\\">
                                      <div className=\\"heading\\">
                                        <span className=\\"label\\">
                                          LO
                                        </span>
                                        <div className=\\"controls\\">
                                          <Icon onClick={[Function: res]} type=\\"plus-circle\\" buttonProps={{...}} tooltipProps={{...}}>
                                            <Button variant=\\"plain\\" className=\\"ox-icon-plus-circle\\" onClick={[Function: res]} active={false} disabled={false} type=\\"button\\">
                                              <button onClick={[Function: res]} disabled={false} type=\\"button\\" className=\\"ox-icon-plus-circle btn btn-plain\\">
                                                <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-plus-circle\\" icon={{...}}>
                                                  <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-plus-circle\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                    <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"plus-circle\\" className=\\"svg-inline--fa fa-plus-circle fa-w-16 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-plus-circle\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}} data-variant={[undefined]}>
                                                      <path fill=\\"currentColor\\" d=\\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z\\" style={{...}} />
                                                    </svg>
                                                  </FontAwesomeIcon>
                                                </IconWrapper>
                                              </button>
                                            </Button>
                                          </Icon>
                                        </div>
                                      </div>
                                      <Input exercise={{...}} tag={{...}}>
                                        <div className=\\"tag\\">
                                          <BookSelection onChange={[Function: res]} selected=\\"stax-phys\\" limit={{...}}>
                                            <select className=\\"form-control\\" onChange={[Function: res]} value=\\"stax-phys\\">
                                              <option value=\\"stax-phys\\">
                                                College Physics
                                              </option>
                                            </select>
                                          </BookSelection>
                                          <input className=\\"form-control\\" type=\\"text\\" onChange={[Function: res]} onBlur={[Function: res]} value=\\"1-2-1\\" placeholder=\\"##-##-##\\" />
                                          <TagError error={[undefined]} />
                                          <span className=\\"controls\\">
                                            <Icon type=\\"trash\\" onClick={[Function: res]} buttonProps={{...}} tooltipProps={{...}}>
                                              <Button variant=\\"plain\\" className=\\"ox-icon-trash\\" onClick={[Function: res]} active={false} disabled={false} type=\\"button\\">
                                                <button onClick={[Function: res]} disabled={false} type=\\"button\\" className=\\"ox-icon-trash btn btn-plain\\">
                                                  <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-trash\\" icon={{...}}>
                                                    <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-trash\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                      <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"trash-alt\\" className=\\"svg-inline--fa fa-trash-alt fa-w-14 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-trash\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 448 512\\" style={{...}} data-variant={[undefined]}>
                                                        <path fill=\\"currentColor\\" d=\\"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\\" style={{...}} />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                  </IconWrapper>
                                                </button>
                                              </Button>
                                            </Icon>
                                          </span>
                                        </div>
                                      </Input>
                                    </div>
                                  </TagWrapper>
                                </LoTags>
                                <ApLoTags exercise={{...}} />
                                <QuestionTypeTag exercise={{...}}>
                                  <SingleDropdown readonly={false} exercise={{...}} label=\\"Question Type\\" type=\\"type\\" choices={{...}} icon={false}>
                                    <TagWrapper label=\\"Question Type\\" icon={false} singleTag={true}>
                                      <div className=\\"tag-type has-single-tag\\">
                                        <div className=\\"heading\\">
                                          <span className=\\"label\\">
                                            Question Type
                                          </span>
                                          <div className=\\"controls\\" />
                                        </div>
                                        <div className=\\"tag\\">
                                          <select className=\\"form-control\\" onChange={[Function: res]} value=\\"conceptual\\" disabled={false}>
                                            <option value=\\"conceptual-or-recall\\">
                                              Conceptual or Recall
                                            </option>
                                            <option value=\\"conceptual\\">
                                              Conceptual
                                            </option>
                                            <option value=\\"recall\\">
                                              Recall
                                            </option>
                                            <option value=\\"practice\\">
                                              Practice
                                            </option>
                                          </select>
                                        </div>
                                      </div>
                                    </TagWrapper>
                                  </SingleDropdown>
                                </QuestionTypeTag>
                                <HistoricalThinkingTag exercise={{...}} />
                                <ReasoningProcessTag exercise={{...}} />
                                <FilterTypeTag exercise={{...}}>
                                  <MultiSelect exercise={{...}} label=\\"Filter Type\\" tagType=\\"filter-type\\" options={{...}}>
                                    <TagWrapper label=\\"Filter Type\\">
                                      <div className=\\"tag-type\\">
                                        <div className=\\"heading\\">
                                          <span className=\\"label\\">
                                            Filter Type
                                          </span>
                                          <div className=\\"controls\\" />
                                        </div>
                                        <div className=\\"tag\\">
                                          <StyledSelect isMulti={true} options={{...}} defaultValue={{...}} onChange={[Function: res]}>
                                            <StateManager isMulti={true} options={{...}} defaultValue={{...}} onChange={[Function: res]} className=\\"StyledSelect-sc-1cekfhv-0 bOCDkl\\" defaultInputValue=\\"\\" defaultMenuIsOpen={false}>
                                              <Select isMulti={true} options={{...}} onChange={[Function]} className=\\"StyledSelect-sc-1cekfhv-0 bOCDkl\\" inputValue=\\"\\" menuIsOpen={false} onInputChange={[Function]} onMenuClose={[Function]} onMenuOpen={[Function]} value={{...}} backspaceRemovesValue={true} blurInputOnSelect={true} captureMenuScroll={false} closeMenuOnSelect={true} closeMenuOnScroll={false} components={{...}} controlShouldRenderValue={true} escapeClearsValue={false} filterOption={[Function]} formatGroupLabel={[Function: formatGroupLabel]} getOptionLabel={[Function: getOptionLabel]} getOptionValue={[Function: getOptionValue]} isDisabled={false} isLoading={false} isRtl={false} isSearchable={true} isOptionDisabled={[Function: isOptionDisabled]} loadingMessage={[Function: loadingMessage]} maxMenuHeight={300} minMenuHeight={140} menuPlacement=\\"bottom\\" menuPosition=\\"absolute\\" menuShouldBlockScroll={false} menuShouldScrollIntoView={true} noOptionsMessage={[Function: noOptionsMessage]} openMenuOnFocus={false} openMenuOnClick={true} pageSize={5} placeholder=\\"Select...\\" screenReaderStatus={[Function: screenReaderStatus]} styles={{...}} tabIndex=\\"0\\" tabSelectsValue={true}>
                                                <SelectContainer cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={true} isMulti={true} isRtl={false} options={{...}} selectOption={[Function]} setValue={[Function]} selectProps={{...}} theme={{...}} className=\\"StyledSelect-sc-1cekfhv-0 bOCDkl\\" innerProps={{...}} isDisabled={false} isFocused={false}>
                                                  <EmotionCssPropInternal css={{...}} className=\\"StyledSelect-sc-1cekfhv-0 bOCDkl\\" id={[undefined]} onKeyDown={[Function]} __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"SelectContainer\\">
                                                    <div className=\\"StyledSelect-sc-1cekfhv-0 bOCDkl css-2b097c-container\\" id={[undefined]} onKeyDown={[Function]}>
                                                      <Control cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={true} isMulti={true} isRtl={false} options={{...}} selectOption={[Function]} setValue={[Function]} selectProps={{...}} theme={{...}} innerRef={[Function]} innerProps={{...}} isDisabled={false} isFocused={false} menuIsOpen={false}>
                                                        <EmotionCssPropInternal css={{...}} className=\\"\\" onMouseDown={[Function]} onTouchEnd={[Function]} __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"Control\\">
                                                          <div className=\\" css-yk16xz-control\\" onMouseDown={[Function]} onTouchEnd={[Function]}>
                                                            <ValueContainer cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={true} isMulti={true} isRtl={false} options={{...}} selectOption={[Function]} setValue={[Function]} selectProps={{...}} theme={{...}} isDisabled={false}>
                                                              <EmotionCssPropInternal css={{...}} className=\\"\\" __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\">
                                                                <div className=\\" css-1hwfws3\\">
                                                                  <MultiValue cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={true} isMulti={true} isRtl={false} options={{...}} selectOption={[Function]} setValue={[Function]} selectProps={{...}} theme={{...}} components={{...}} isFocused={false} isDisabled={false} removeProps={{...}} data={{...}} cropWithEllipsis={true}>
                                                                    <ForwardRef(render)>
                                                                      <MultiValueGeneric data={{...}} innerProps={{...}} selectProps={{...}}>
                                                                        <div className=\\"css-1rhbuit-multiValue\\">
                                                                          <MultiValueGeneric data={{...}} innerProps={{...}} selectProps={{...}}>
                                                                            <div className=\\"css-12jo7m5\\">
                                                                              Test Prep
                                                                            </div>
                                                                          </MultiValueGeneric>
                                                                          <MultiValueRemove data={{...}} innerProps={{...}} selectProps={{...}}>
                                                                            <div className=\\"css-1alnv5e\\" onClick={[Function: onClick]} onTouchEnd={[Function: onTouchEnd]} onMouseDown={[Function: onMouseDown]}>
                                                                              <CrossIcon size={14}>
                                                                                <Svg size={14}>
                                                                                  <EmotionCssPropInternal height={14} width={14} viewBox=\\"0 0 20 20\\" aria-hidden=\\"true\\" focusable=\\"false\\" css={{...}} __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"svg\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"Svg\\">
                                                                                    <svg height={14} width={14} viewBox=\\"0 0 20 20\\" aria-hidden=\\"true\\" focusable=\\"false\\" className=\\"css-tj5bde-Svg\\">
                                                                                      <path d=\\"M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z\\" />
                                                                                    </svg>
                                                                                  </EmotionCssPropInternal>
                                                                                </Svg>
                                                                              </CrossIcon>
                                                                            </div>
                                                                          </MultiValueRemove>
                                                                        </div>
                                                                      </MultiValueGeneric>
                                                                    </ForwardRef(render)>
                                                                  </MultiValue>
                                                                  <Input autoCapitalize=\\"none\\" autoComplete=\\"off\\" autoCorrect=\\"off\\" cx={[Function: bound classNames]} getStyles={[Function]} id=\\"react-select-4-input\\" innerRef={[Function]} isDisabled={false} isHidden={false} onBlur={[Function]} onChange={[Function]} onFocus={[Function]} selectProps={{...}} spellCheck=\\"false\\" tabIndex=\\"0\\" theme={{...}} type=\\"text\\" value=\\"\\" aria-autocomplete=\\"list\\" aria-label={[undefined]} aria-labelledby={[undefined]}>
                                                                    <EmotionCssPropInternal css={{...}} __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"Input\\">
                                                                      <div className=\\"css-w8afj7-Input\\">
                                                                        <AutosizeInput className=\\"\\" inputRef={[Function]} inputStyle={{...}} disabled={false} autoCapitalize=\\"none\\" autoComplete=\\"off\\" autoCorrect=\\"off\\" id=\\"react-select-4-input\\" onBlur={[Function]} onChange={[Function]} onFocus={[Function]} spellCheck=\\"false\\" tabIndex=\\"0\\" type=\\"text\\" value=\\"\\" aria-autocomplete=\\"list\\" aria-label={[undefined]} aria-labelledby={[undefined]} minWidth={1} injectStyles={true}>
                                                                          <div className=\\"\\" style={{...}}>
                                                                            <input className={[undefined]} disabled={false} autoCapitalize=\\"none\\" autoComplete=\\"off\\" autoCorrect=\\"off\\" id=\\"react-select-4-input\\" onBlur={[Function]} onChange={[Function]} onFocus={[Function]} spellCheck=\\"false\\" tabIndex=\\"0\\" type=\\"text\\" value=\\"\\" aria-autocomplete=\\"list\\" aria-label={[undefined]} aria-labelledby={[undefined]} style={{...}} />
                                                                            <div style={{...}} />
                                                                          </div>
                                                                        </AutosizeInput>
                                                                      </div>
                                                                    </EmotionCssPropInternal>
                                                                  </Input>
                                                                </div>
                                                              </EmotionCssPropInternal>
                                                            </ValueContainer>
                                                            <IndicatorsContainer cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={true} isMulti={true} isRtl={false} options={{...}} selectOption={[Function]} setValue={[Function]} selectProps={{...}} theme={{...}} isDisabled={false}>
                                                              <EmotionCssPropInternal css={{...}} className=\\"\\" __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"IndicatorsContainer\\">
                                                                <div className=\\" css-1g48xl4-IndicatorsContainer\\">
                                                                  <ClearIndicator cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={true} isMulti={true} isRtl={false} options={{...}} selectOption={[Function]} setValue={[Function]} selectProps={{...}} theme={{...}} innerProps={{...}} isFocused={false}>
                                                                    <EmotionCssPropInternal onMouseDown={[Function]} onTouchEnd={[Function]} aria-hidden=\\"true\\" css={{...}} className=\\"\\" __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"ClearIndicator\\">
                                                                      <div onMouseDown={[Function]} onTouchEnd={[Function]} aria-hidden=\\"true\\" className=\\" css-tlfecz-indicatorContainer\\">
                                                                        <CrossIcon>
                                                                          <Svg size={20}>
                                                                            <EmotionCssPropInternal height={20} width={20} viewBox=\\"0 0 20 20\\" aria-hidden=\\"true\\" focusable=\\"false\\" css={{...}} __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"svg\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"Svg\\">
                                                                              <svg height={20} width={20} viewBox=\\"0 0 20 20\\" aria-hidden=\\"true\\" focusable=\\"false\\" className=\\"css-tj5bde-Svg\\">
                                                                                <path d=\\"M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z\\" />
                                                                              </svg>
                                                                            </EmotionCssPropInternal>
                                                                          </Svg>
                                                                        </CrossIcon>
                                                                      </div>
                                                                    </EmotionCssPropInternal>
                                                                  </ClearIndicator>
                                                                  <IndicatorSeparator cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={true} isMulti={true} isRtl={false} options={{...}} selectOption={[Function]} setValue={[Function]} selectProps={{...}} theme={{...}} isDisabled={false} isFocused={false}>
                                                                    <EmotionCssPropInternal css={{...}} className=\\"\\" __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"span\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"IndicatorSeparator\\">
                                                                      <span className=\\" css-1okebmr-indicatorSeparator\\" />
                                                                    </EmotionCssPropInternal>
                                                                  </IndicatorSeparator>
                                                                  <DropdownIndicator cx={[Function: bound classNames]} clearValue={[Function]} getStyles={[Function]} getValue={[Function: getValue]} hasValue={true} isMulti={true} isRtl={false} options={{...}} selectOption={[Function]} setValue={[Function]} selectProps={{...}} theme={{...}} innerProps={{...}} isDisabled={false} isFocused={false}>
                                                                    <EmotionCssPropInternal onMouseDown={[Function]} onTouchEnd={[Function]} aria-hidden=\\"true\\" css={{...}} className=\\"\\" __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"div\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"DropdownIndicator\\">
                                                                      <div onMouseDown={[Function]} onTouchEnd={[Function]} aria-hidden=\\"true\\" className=\\" css-tlfecz-indicatorContainer\\">
                                                                        <DownChevron>
                                                                          <Svg size={20}>
                                                                            <EmotionCssPropInternal height={20} width={20} viewBox=\\"0 0 20 20\\" aria-hidden=\\"true\\" focusable=\\"false\\" css={{...}} __EMOTION_TYPE_PLEASE_DO_NOT_USE__=\\"svg\\" __EMOTION_LABEL_PLEASE_DO_NOT_USE__=\\"Svg\\">
                                                                              <svg height={20} width={20} viewBox=\\"0 0 20 20\\" aria-hidden=\\"true\\" focusable=\\"false\\" className=\\"css-tj5bde-Svg\\">
                                                                                <path d=\\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\\" />
                                                                              </svg>
                                                                            </EmotionCssPropInternal>
                                                                          </Svg>
                                                                        </DownChevron>
                                                                      </div>
                                                                    </EmotionCssPropInternal>
                                                                  </DropdownIndicator>
                                                                </div>
                                                              </EmotionCssPropInternal>
                                                            </IndicatorsContainer>
                                                          </div>
                                                        </EmotionCssPropInternal>
                                                      </Control>
                                                    </div>
                                                  </EmotionCssPropInternal>
                                                </SelectContainer>
                                              </Select>
                                            </StateManager>
                                          </StyledSelect>
                                        </div>
                                      </div>
                                    </TagWrapper>
                                  </MultiSelect>
                                </FilterTypeTag>
                                <RequiresContextTag exercise={{...}}>
                                  <TagWrapper label=\\"Requires Context\\">
                                    <div className=\\"tag-type\\">
                                      <div className=\\"heading\\">
                                        <span className=\\"label\\">
                                          Requires Context
                                        </span>
                                        <div className=\\"controls\\" />
                                      </div>
                                      <div className=\\"tag\\">
                                        <input type=\\"checkbox\\" label=\\"\\" onChange={[Function: res]} checked={true} />
                                      </div>
                                    </div>
                                  </TagWrapper>
                                </RequiresContextTag>
                                <CnxModTag exercise={{...}}>
                                  <MultiInput exercise={{...}} label=\\"CNX Module\\" type=\\"context-cnxmod\\" cleanInput={[Function]} validateInput={[Function]} placeholder=\\"########-####-####-####-############\\">
                                    <TagWrapper label=\\"CNX Module\\" onAdd={[Function: res]} singleTag={true}>
                                      <div className=\\"tag-type has-single-tag\\">
                                        <div className=\\"heading\\">
                                          <span className=\\"label\\">
                                            CNX Module
                                          </span>
                                          <div className=\\"controls\\">
                                            <Icon onClick={[Function: res]} type=\\"plus-circle\\" buttonProps={{...}} tooltipProps={{...}}>
                                              <Button variant=\\"plain\\" className=\\"ox-icon-plus-circle\\" onClick={[Function: res]} active={false} disabled={false} type=\\"button\\">
                                                <button onClick={[Function: res]} disabled={false} type=\\"button\\" className=\\"ox-icon-plus-circle btn btn-plain\\">
                                                  <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-plus-circle\\" icon={{...}}>
                                                    <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-plus-circle\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                      <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"plus-circle\\" className=\\"svg-inline--fa fa-plus-circle fa-w-16 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-plus-circle\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}} data-variant={[undefined]}>
                                                        <path fill=\\"currentColor\\" d=\\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z\\" style={{...}} />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                  </IconWrapper>
                                                </button>
                                              </Button>
                                            </Icon>
                                          </div>
                                        </div>
                                        <Input exercise={{...}} label=\\"CNX Module\\" type=\\"context-cnxmod\\" cleanInput={[Function]} validateInput={[Function]} placeholder=\\"########-####-####-####-############\\" tag={{...}} inputType=\\"text\\">
                                          <div className=\\"tag\\">
                                            <input className=\\"form-control\\" type=\\"text\\" onChange={[Function: res]} onBlur={[Function: res]} value=\\"\\" placeholder=\\"########-####-####-####-############\\" />
                                            <TagError error=\\"\\" />
                                            <span className=\\"controls\\">
                                              <Icon onClick={[Function: res]} type=\\"trash\\" buttonProps={{...}} tooltipProps={{...}}>
                                                <Button variant=\\"plain\\" className=\\"ox-icon-trash\\" onClick={[Function: res]} active={false} disabled={false} type=\\"button\\">
                                                  <button onClick={[Function: res]} disabled={false} type=\\"button\\" className=\\"ox-icon-trash btn btn-plain\\">
                                                    <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-trash\\" icon={{...}}>
                                                      <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-trash\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                        <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"trash-alt\\" className=\\"svg-inline--fa fa-trash-alt fa-w-14 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-trash\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 448 512\\" style={{...}} data-variant={[undefined]}>
                                                          <path fill=\\"currentColor\\" d=\\"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\\" style={{...}} />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                    </IconWrapper>
                                                  </button>
                                                </Button>
                                              </Icon>
                                            </span>
                                          </div>
                                        </Input>
                                      </div>
                                    </TagWrapper>
                                  </MultiInput>
                                </CnxModTag>
                                <CnxFeature exercise={{...}}>
                                  <MultiInput exercise={{...}} label=\\"CNX Feature\\" type=\\"context-cnxfeature\\" cleanInput={[Function]} placeholder=\\"feature-id\\" validateInput={[Function]}>
                                    <TagWrapper label=\\"CNX Feature\\" onAdd={[Function: res]} singleTag={true}>
                                      <div className=\\"tag-type has-single-tag\\">
                                        <div className=\\"heading\\">
                                          <span className=\\"label\\">
                                            CNX Feature
                                          </span>
                                          <div className=\\"controls\\">
                                            <Icon onClick={[Function: res]} type=\\"plus-circle\\" buttonProps={{...}} tooltipProps={{...}}>
                                              <Button variant=\\"plain\\" className=\\"ox-icon-plus-circle\\" onClick={[Function: res]} active={false} disabled={false} type=\\"button\\">
                                                <button onClick={[Function: res]} disabled={false} type=\\"button\\" className=\\"ox-icon-plus-circle btn btn-plain\\">
                                                  <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-plus-circle\\" icon={{...}}>
                                                    <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-plus-circle\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                      <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"plus-circle\\" className=\\"svg-inline--fa fa-plus-circle fa-w-16 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-plus-circle\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}} data-variant={[undefined]}>
                                                        <path fill=\\"currentColor\\" d=\\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z\\" style={{...}} />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                  </IconWrapper>
                                                </button>
                                              </Button>
                                            </Icon>
                                          </div>
                                        </div>
                                        <Input exercise={{...}} label=\\"CNX Feature\\" type=\\"context-cnxfeature\\" cleanInput={[Function]} placeholder=\\"feature-id\\" validateInput={[Function]} tag={{...}} inputType=\\"text\\">
                                          <div className=\\"tag\\">
                                            <input className=\\"form-control\\" type=\\"text\\" onChange={[Function: res]} onBlur={[Function: res]} value=\\"one-1\\" placeholder=\\"feature-id\\" />
                                            <TagError error=\\"\\" />
                                            <span className=\\"controls\\">
                                              <Icon onClick={[Function: res]} type=\\"trash\\" buttonProps={{...}} tooltipProps={{...}}>
                                                <Button variant=\\"plain\\" className=\\"ox-icon-trash\\" onClick={[Function: res]} active={false} disabled={false} type=\\"button\\">
                                                  <button onClick={[Function: res]} disabled={false} type=\\"button\\" className=\\"ox-icon-trash btn btn-plain\\">
                                                    <IconWrapper data-variant={[undefined]} className=\\"ox-icon ox-icon-trash\\" icon={{...}}>
                                                      <FontAwesomeIcon data-variant={[undefined]} className=\\"IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-trash\\" icon={{...}} border={false} mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}}>
                                                        <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"trash-alt\\" className=\\"svg-inline--fa fa-trash-alt fa-w-14 IconWrapper-ra27cp-0 gKKqUB ox-icon ox-icon-trash\\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 448 512\\" style={{...}} data-variant={[undefined]}>
                                                          <path fill=\\"currentColor\\" d=\\"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\\" style={{...}} />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                    </IconWrapper>
                                                  </button>
                                                </Button>
                                              </Icon>
                                            </span>
                                          </div>
                                        </Input>
                                      </div>
                                    </TagWrapper>
                                  </MultiInput>
                                </CnxFeature>
                                <DokTag exercise={{...}}>
                                  <SingleDropdown exercise={{...}} label=\\"DOK\\" type=\\"dok\\" choices={{...}}>
                                    <TagWrapper label=\\"DOK\\" icon={[undefined]} singleTag={true}>
                                      <div className=\\"tag-type has-single-tag\\">
                                        <div className=\\"heading\\">
                                          <span className=\\"label\\">
                                            DOK
                                          </span>
                                          <div className=\\"controls\\" />
                                        </div>
                                        <div className=\\"tag\\">
                                          <select className=\\"form-control\\" onChange={[Function: res]} value=\\"3\\" disabled={[undefined]}>
                                            <option value=\\"1\\">
                                              1
                                            </option>
                                            <option value=\\"2\\">
                                              2
                                            </option>
                                            <option value=\\"3\\">
                                              3
                                            </option>
                                            <option value=\\"4\\">
                                              4
                                            </option>
                                          </select>
                                        </div>
                                      </div>
                                    </TagWrapper>
                                  </SingleDropdown>
                                </DokTag>
                                <BloomsTag exercise={{...}}>
                                  <SingleDropdown exercise={{...}} label=\\"Blooms\\" type=\\"blooms\\" choices={{...}}>
                                    <TagWrapper label=\\"Blooms\\" icon={[undefined]} singleTag={true}>
                                      <div className=\\"tag-type has-single-tag\\">
                                        <div className=\\"heading\\">
                                          <span className=\\"label\\">
                                            Blooms
                                          </span>
                                          <div className=\\"controls\\" />
                                        </div>
                                        <div className=\\"tag\\">
                                          <select className=\\"form-control\\" onChange={[Function: res]} value=\\"3\\" disabled={[undefined]}>
                                            <option value=\\"1\\">
                                              1
                                            </option>
                                            <option value=\\"2\\">
                                              2
                                            </option>
                                            <option value=\\"3\\">
                                              3
                                            </option>
                                            <option value=\\"4\\">
                                              4
                                            </option>
                                            <option value=\\"5\\">
                                              5
                                            </option>
                                            <option value=\\"6\\">
                                              6
                                            </option>
                                          </select>
                                        </div>
                                      </div>
                                    </TagWrapper>
                                  </SingleDropdown>
                                </BloomsTag>
                                <TimeTag exercise={{...}}>
                                  <SingleDropdown exercise={{...}} label=\\"Time\\" type=\\"time\\" choices={{...}}>
                                    <TagWrapper label=\\"Time\\" icon={[undefined]} singleTag={true}>
                                      <div className=\\"tag-type has-single-tag\\">
                                        <div className=\\"heading\\">
                                          <span className=\\"label\\">
                                            Time
                                          </span>
                                          <div className=\\"controls\\" />
                                        </div>
                                        <div className=\\"tag\\">
                                          <select className=\\"form-control\\" onChange={[Function: res]} value=\\"long\\" disabled={[undefined]}>
                                            <option value=\\"short\\">
                                              Short
                                            </option>
                                            <option value=\\"medium\\">
                                              Medium
                                            </option>
                                            <option value=\\"long\\">
                                              Long
                                            </option>
                                          </select>
                                        </div>
                                      </div>
                                    </TagWrapper>
                                  </SingleDropdown>
                                </TimeTag>
                              </div>
                            </div>
                          </ExerciseTags>
                        </div>
                      </Transition>
                    </Fade>
                  </TabPane>
                  <TabPane eventKey=\\"assets\\">
                    <Fade in={false} onEnter={[undefined]} onEntering={[undefined]} onEntered={[undefined]} onExit={[undefined]} onExiting={[undefined]} onExited={[undefined]} mountOnEnter={false} unmountOnExit={false} timeout={300} appear={false}>
                      <Transition addEndListener={[Function: transitionEnd]} in={false} onEnter={[Function]} onEntering={[Function: noop]} onEntered={[Function: noop]} onExit={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]} mountOnEnter={false} unmountOnExit={false} timeout={300} appear={false} enter={true} exit={true}>
                        <div id=\\"exercise-parts-tabpane-assets\\" aria-labelledby=\\"exercise-parts-tab-assets\\" role=\\"tabpanel\\" aria-hidden={true} className=\\"fade tab-pane\\">
                          <Attachments exercises={{...}} exercise={{...}}>
                            <div className=\\"attachments\\">
                              <Attachment attachment={{...}}>
                                <div className=\\"attachment with-image\\">
                                  <img className=\\"preview\\" src=\\"/attachments/27.png\\" />
                                  <textarea value=\\"<img src=\\"/attachments/large_27.png\\" alt=\\"\\">\\" readOnly={true} className=\\"copypaste\\" />
                                </div>
                              </Attachment>
                              <Attachment attachment={{...}}>
                                <div className=\\"attachment with-image\\">
                                  <img className=\\"preview\\" src=\\"/attachments/28.png\\" />
                                  <textarea value=\\"<img src=\\"/attachments/large_28.png\\" alt=\\"\\">\\" readOnly={true} className=\\"copypaste\\" />
                                </div>
                              </Attachment>
                              <withRouter(AttachmentChooser) exercise={{...}}>
                                <AttachmentChooser exercise={{...}} history={{...}} location={{...}} match={{...}} staticContext={[undefined]} exercises={{...}}>
                                  <div className=\\"attachment\\">
                                    <div className=\\"controls\\">
                                      <label className=\\"btn btn-secondary selector\\">
                                        Add new image
                                        <input id=\\"file\\" className=\\"file\\" type=\\"file\\" onChange={[Function: res]} />
                                      </label>
                                    </div>
                                  </div>
                                </AttachmentChooser>
                              </withRouter(AttachmentChooser)>
                            </div>
                          </Attachments>
                        </div>
                      </Transition>
                    </Fade>
                  </TabPane>
                </div>
              </ForwardRef>
            </TabContainer>
          </Tabs>
        </div>
        <ExerciseEditingPreview exercise={{...}}>
          <Preview>
            <div className=\\"Preview-sc-1vfgcxn-0 emVBze\\">
              <CornerRibbon shadow={true} color=\\"navy\\" position=\\"topRight\\" hidden={false} label={{...}}>
                <Ribbon>
                  <div className=\\"Ribbon-ky3mx8-0 cFwKlm\\">
                    <Content shadow={true} color=\\"navy\\" position=\\"topRight\\" hidden={false}>
                      <div color=\\"navy\\" hidden={false} className=\\"Content-ky3mx8-1 fDYfnj\\">
                        <div>
                          READ ONLY
                        </div>
                        <div>
                          Author: Leonardo
                        </div>
                      </div>
                    </Content>
                    <ExercisePreview className=\\"exercise-editing-preview\\" isInteractive={true} displayAllTags={true} displayFeedback={true} displayFormats={true} displayNickname={true} exercise={{...}} panelStyle=\\"default\\" overlayActions={{...}} extractedInfo={{...}}>
                      <Card className=\\"openstax-exercise-preview exercise-editing-preview is-displaying-formats is-displaying-feedback\\" data-exercise-id=\\"14@1\\" tabIndex={-1} body={false}>
                        <div data-exercise-id=\\"14@1\\" tabIndex={-1} className=\\"openstax-exercise-preview exercise-editing-preview is-displaying-formats is-displaying-feedback card\\">
                          <CardBody>
                            <div className=\\"card-body\\">
                              <ControlsOverlay exercise={{...}} actions={{...}} onClick={[undefined]} />
                              <div className=\\"exercise-body\\">
                                <ExerciseBadges multiPart={[undefined]} video={[undefined]} interactive={[undefined]} writtenResponse={[undefined]} />
                                <Component className=\\"stimulus\\" block={true} html={[undefined]} />
                                <div>
                                  <Question hideAnswers={[undefined]} className=\\"openstax-question-preview\\" question={{...}} choicesEnabled={false} displayFormats={true} show_all_feedback={true} type=\\"teacher-preview\\" displaySolution={true}>
                                    <div className=\\"openstax-question openstax-question-preview\\" data-question-number={[undefined]}>
                                      <QuestionHtml type=\\"context\\" html=\\"\\" />
                                      <QuestionHtml type=\\"stimulus\\" html=\\"\\" />
                                      <QuestionHtml type=\\"stem\\" html=\\"What conditions imply that we can use classical physics without considering special relativity or quantum mechanics?\\" questionNumber={[undefined]}>
                                        <Component processHtmlAndMath={[undefined]} className=\\"question-stem\\" block={true} html=\\"What conditions imply that we can use classical physics without considering special relativity or quantum mechanics?\\" data-question-number={[undefined]}>
                                          <div dangerouslySetInnerHTML={{...}} />
                                        </Component>
                                      </QuestionHtml>
                                      <AnswersTable hideAnswers={[undefined]} className=\\"openstax-question-preview\\" question={{...}} choicesEnabled={false} displayFormats={true} show_all_feedback={true} type=\\"teacher-preview\\" displaySolution={true} hasCorrectAnswer={false} keySet=\\"multiple-choice\\">
                                        <div className=\\"answers-table\\">
                                          <Answer answer={{...}} iter={0} qid={16} correctAnswerId={[undefined]} hasCorrectAnswer={false} chosenAnswer={{...}} onChangeAnswer={[Function: res]} type=\\"teacher-preview\\" answered_count={[undefined]} disabled={true} show_all_feedback={true}>
                                            <div className=\\"openstax-answer\\">
                                              <section role=\\"region\\" className=\\"answers-answer disabled\\">
                                                <div className=\\"correct-incorrect\\" />
                                                <label onKeyPress={[Function]} htmlFor=\\"16-option-0\\" className=\\"answer-label\\">
                                                  <span className=\\"answer-letter-wrapper\\">
                                                    <button onClick={[undefined]} aria-label=\\"Choice a:\\" className=\\"answer-letter\\" disabled={true} data-test-id=\\"answer-choice-a\\">
                                                      a
                                                    </button>
                                                  </span>
                                                  <div className=\\"answer-answer\\">
                                                    <Component processHtmlAndMath={[undefined]} className=\\"answer-content\\" html=\\"<ol>\\\\n  <li>matter is moving at speeds of less than roughly 1% the speed of light,</li>\\\\n  <li>objects are large enough to be seen with the naked eye, and</li>\\\\n  <li>there is the involvement of a strong gravitational field</li>\\\\n</ol>\\\\n\\">
                                                      <div dangerouslySetInnerHTML={{...}} />
                                                    </Component>
                                                    <Memo(wrappedComponent)>
                                                      <aside>
                                                        <Component className=\\"question-feedback-content has-html\\" html=\\"A high gravitational field distorts space-time and leads to phenomena that classical physics fails to explain.\\" block={true}>
                                                          <div dangerouslySetInnerHTML={{...}} />
                                                        </Component>
                                                      </aside>
                                                    </Memo(wrappedComponent)>
                                                  </div>
                                                </label>
                                              </section>
                                            </div>
                                          </Answer>
                                          <Answer answer={{...}} iter={1} qid={16} correctAnswerId={[undefined]} hasCorrectAnswer={false} chosenAnswer={{...}} onChangeAnswer={[Function: res]} type=\\"teacher-preview\\" answered_count={[undefined]} disabled={true} show_all_feedback={true}>
                                            <div className=\\"openstax-answer\\">
                                              <section role=\\"region\\" className=\\"answers-answer disabled\\">
                                                <div className=\\"correct-incorrect\\" />
                                                <label onKeyPress={[Function]} htmlFor=\\"16-option-1\\" className=\\"answer-label\\">
                                                  <span className=\\"answer-letter-wrapper\\">
                                                    <button onClick={[undefined]} aria-label=\\"Choice b:\\" className=\\"answer-letter\\" disabled={true} data-test-id=\\"answer-choice-b\\">
                                                      b
                                                    </button>
                                                  </span>
                                                  <div className=\\"answer-answer\\">
                                                    <Component processHtmlAndMath={[undefined]} className=\\"answer-content\\" html=\\"<ol>\\\\n  <li>matter is moving at speeds of less than roughly 1% the speed of light,</li>\\\\n  <li>objects are large enough to be seen with the naked eye, and</li>\\\\n  <li>there is the involvement of a weak gravitational field</li>\\\\n</ol>\\\\n\\">
                                                      <div dangerouslySetInnerHTML={{...}} />
                                                    </Component>
                                                    <Memo(wrappedComponent)>
                                                      <aside>
                                                        <Component className=\\"question-feedback-content has-html\\" html=\\"Classical physics involves weak gravitational fields and objects big enough to be seen with the naked eye with their motional speed much less than the speed of light. Also, it is a subset of the Einstein’s theory of relativity where not only weak gravitational field but also strong gravity influences are studied.\\" block={true}>
                                                          <div dangerouslySetInnerHTML={{...}} />
                                                        </Component>
                                                      </aside>
                                                    </Memo(wrappedComponent)>
                                                  </div>
                                                </label>
                                              </section>
                                            </div>
                                          </Answer>
                                          <Answer answer={{...}} iter={2} qid={16} correctAnswerId={[undefined]} hasCorrectAnswer={false} chosenAnswer={{...}} onChangeAnswer={[Function: res]} type=\\"teacher-preview\\" answered_count={[undefined]} disabled={true} show_all_feedback={true}>
                                            <div className=\\"openstax-answer\\">
                                              <section role=\\"region\\" className=\\"answers-answer disabled\\">
                                                <div className=\\"correct-incorrect\\" />
                                                <label onKeyPress={[Function]} htmlFor=\\"16-option-2\\" className=\\"answer-label\\">
                                                  <span className=\\"answer-letter-wrapper\\">
                                                    <button onClick={[undefined]} aria-label=\\"Choice c:\\" className=\\"answer-letter\\" disabled={true} data-test-id=\\"answer-choice-c\\">
                                                      c
                                                    </button>
                                                  </span>
                                                  <div className=\\"answer-answer\\">
                                                    <Component processHtmlAndMath={[undefined]} className=\\"answer-content\\" html=\\"<ol>\\\\n  <li>matter is moving at speeds of less than roughly 1% the speed of light,</li>\\\\n  <li>objects are too small to be seen with the naked eye, and</li>\\\\n  <li>there is the involvement of only a weak gravitational field</li>\\\\n</ol>\\\\n\\">
                                                      <div dangerouslySetInnerHTML={{...}} />
                                                    </Component>
                                                    <Memo(wrappedComponent)>
                                                      <aside>
                                                        <Component className=\\"question-feedback-content has-html\\" html=\\"Objects far smaller than what is visible may require quantum mechanics.\\" block={true}>
                                                          <div dangerouslySetInnerHTML={{...}} />
                                                        </Component>
                                                      </aside>
                                                    </Memo(wrappedComponent)>
                                                  </div>
                                                </label>
                                              </section>
                                            </div>
                                          </Answer>
                                          <Answer answer={{...}} iter={3} qid={16} correctAnswerId={[undefined]} hasCorrectAnswer={false} chosenAnswer={{...}} onChangeAnswer={[Function: res]} type=\\"teacher-preview\\" answered_count={[undefined]} disabled={true} show_all_feedback={true}>
                                            <div className=\\"openstax-answer\\">
                                              <section role=\\"region\\" className=\\"answers-answer disabled\\">
                                                <div className=\\"correct-incorrect\\" />
                                                <label onKeyPress={[Function]} htmlFor=\\"16-option-3\\" className=\\"answer-label\\">
                                                  <span className=\\"answer-letter-wrapper\\">
                                                    <button onClick={[undefined]} aria-label=\\"Choice d:\\" className=\\"answer-letter\\" disabled={true} data-test-id=\\"answer-choice-d\\">
                                                      d
                                                    </button>
                                                  </span>
                                                  <div className=\\"answer-answer\\">
                                                    <Component processHtmlAndMath={[undefined]} className=\\"answer-content\\" html=\\"<ol>\\\\n  <li>matter is moving at speeds greater than roughly 1% the speed of light,</li>\\\\n  <li>objects are large enough to be seen with the naked eye, and</li>\\\\n  <li>there is the involvement of a strong gravitational field</li>\\\\n</ol>\\\\n\\">
                                                      <div dangerouslySetInnerHTML={{...}} />
                                                    </Component>
                                                    <Memo(wrappedComponent)>
                                                      <aside>
                                                        <Component className=\\"question-feedback-content has-html\\" html=\\"Speeds greater than roughly 1% pf the speed of light start to involve significant effects from relativity.\\" block={true}>
                                                          <div dangerouslySetInnerHTML={{...}} />
                                                        </Component>
                                                      </aside>
                                                    </Memo(wrappedComponent)>
                                                  </div>
                                                </label>
                                              </section>
                                            </div>
                                          </Answer>
                                          <Answer answer={{...}} iter={4} qid={16} correctAnswerId={[undefined]} hasCorrectAnswer={false} chosenAnswer={{...}} onChangeAnswer={[Function: res]} type=\\"teacher-preview\\" answered_count={[undefined]} disabled={true} show_all_feedback={true}>
                                            <div className=\\"openstax-answer\\">
                                              <section role=\\"region\\" className=\\"answers-answer disabled\\">
                                                <div className=\\"correct-incorrect\\" />
                                                <label onKeyPress={[Function]} htmlFor=\\"16-option-4\\" className=\\"answer-label\\">
                                                  <span className=\\"answer-letter-wrapper\\">
                                                    <button onClick={[undefined]} aria-label=\\"Choice e:\\" className=\\"answer-letter\\" disabled={true} data-test-id=\\"answer-choice-e\\">
                                                      e
                                                    </button>
                                                  </span>
                                                  <div className=\\"answer-answer\\">
                                                    <Component processHtmlAndMath={[undefined]} className=\\"answer-content\\" html=\\"<ol>\\\\n  <li>matter is moving at speeds of less than roughly 1% the speed of light,</li>\\\\n  <li>objects are large enough to be seen with the naked eye, and</li>\\\\n  <li>there is the involvement of a strong gravitational field</li>\\\\n</ol>\\\\n\\">
                                                      <div dangerouslySetInnerHTML={{...}} />
                                                    </Component>
                                                    <Memo(wrappedComponent)>
                                                      <aside>
                                                        <Component className=\\"question-feedback-content has-html\\" html=\\"A high gravitational field distorts space-time and leads to phenomena that classical physics fails to explain.\\" block={true}>
                                                          <div dangerouslySetInnerHTML={{...}} />
                                                        </Component>
                                                      </aside>
                                                    </Memo(wrappedComponent)>
                                                  </div>
                                                </label>
                                              </section>
                                            </div>
                                          </Answer>
                                        </div>
                                      </AnswersTable>
                                      <FormatsListing formats={{...}}>
                                        <div className=\\"formats-listing\\">
                                          <div className=\\"header\\">
                                            Formats:
                                          </div>
                                          <span>
                                            free-response
                                          </span>
                                          <span>
                                            multiple-choice
                                          </span>
                                        </div>
                                      </FormatsListing>
                                      <div className=\\"detailed-solution\\">
                                        <div className=\\"header\\">
                                          Detailed solution
                                        </div>
                                        <Component className=\\"solution\\" block={true} html=\\"four\\">
                                          <div dangerouslySetInnerHTML={{...}} />
                                        </Component>
                                      </div>
                                    </div>
                                  </Question>
                                </div>
                              </div>
                              <div className=\\"exercise-tags\\">
                                <span className=\\"exercise-tag\\">
                                  lo:stax-phys:1-2-1
                                </span>
                                <span className=\\"exercise-tag\\">
                                  blooms:3
                                </span>
                                <span className=\\"exercise-tag\\">
                                  book:stax-phys
                                </span>
                                <span className=\\"exercise-tag\\">
                                  context-cnxfeature:one-1
                                </span>
                                <span className=\\"exercise-tag\\">
                                  context-cnxmod:
                                </span>
                                <span className=\\"exercise-tag\\">
                                  dok:3
                                </span>
                                <span className=\\"exercise-tag\\">
                                  filter-type:test-prep
                                </span>
                                <span className=\\"exercise-tag\\">
                                  requires-context:true
                                </span>
                                <span className=\\"exercise-tag\\">
                                  time:long
                                </span>
                                <span className=\\"exercise-tag\\">
                                  type:conceptual
                                </span>
                                <span className=\\"exercise-tag\\">
                                  Nickname:desmond
                                </span>
                                <span className=\\"exercise-tag\\">
                                  ID:14@1
                                </span>
                              </div>
                            </div>
                          </CardBody>
                        </div>
                      </Card>
                    </ExercisePreview>
                  </div>
                </Ribbon>
              </CornerRibbon>
            </div>
          </Preview>
        </ExerciseEditingPreview>
      </div>
    </Exercise>
  </Router>
</MemoryRouter>"
`;
