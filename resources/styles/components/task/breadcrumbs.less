// TODO: 2.9rem was determined by trial and error
// Can't figure out why it doesn't correspond to the
// 2rem radius (4rem diameter) specified below for .crumb-circle
@crumb-size: 2.9rem;
@crumb-vertical-margin: 1rem;
// Stop generating breakpoints for screens with width greater than 120rem
.breadcrumb-media-queries(@screen-width; @crumb-count) when (@screen-width < 120rem){
  .breadcrumb-media-queries(@screen-width + @crumb-size, @crumb-count);

  @desired-width: (@crumb-size * @crumb-count) + (@tutor-navbar-padding-horizontal*2);
  // only generate a media query if it's needed
  & when (@desired-width > @screen-width) {
    @rows: ceil(@desired-width / @screen-width);
    @media (max-width: @screen-width) {
      margin-top: (@rows * @crumb-size) + (@rows * @crumb-vertical-margin);
    }
  }
}

// Calculate breakpoints for up to 50 breadcrumbs. Adjust as needed
.breadcrumb-breakpoints(@crumb-count:10) when (@crumb-count < 50) {
  .breadcrumb-breakpoints(@crumb-count + 1);
  &[data-crumb-count="@{crumb-count}"] {
    // Generate breackpoints for screens more than 20rem wide
    .breadcrumb-media-queries(20rem, @crumb-count);
  }
}

.task {
  .breadcrumb-breakpoints(10);
}

.crumb-circle(@radius){
  font-size: @radius;
  border-radius: 2 * @radius;
  line-height: 2 * @radius;
  min-width: 2 * @radius;
}

.crumb-text(){
  position: absolute;
  width: 100%;
  text-align: center;
  left: 0;
}

// http://caniuse.com/#search=counter
.task-homework,
.task-practice,
.task-chapter_practice {
  .task-breadcrumbs {
    counter-reset: step;
  }
  .task-breadcrumbs-step:not(.end) {
    &:before {
      counter-increment: step;
      content: counter(step);
      .crumb-text();
    }
    i:not(.icon-incorrect):not(.icon-correct) {
      display: none;
    }
  }
}

// label readings with chapter info if it exists
.task-reading {
  .task-breadcrumbs-step[data-chapter] {

    background: @reading-color;
    color: @tutor-white;

    &.active,
    &.completed {
      color: @tutor-white;
    }

    &::before {
      content: attr(data-chapter);
      .crumb-text();
    }
    i:not(.icon-incorrect):not(.icon-correct) {
      display: none;
    }
  }
}

.task-breadcrumbs {
  margin-left: -2px;
  margin-right: -2px;
}

.task-breadcrumbs-step {
  .crumb-circle(2rem);
  position: relative;
  font-weight: 500;
  cursor: pointer;
  margin: 2px;
  display: inline-block;
  text-align: center;
  background: @tutor-white;
  color: @tutor-neutral;

  &:hover,
  &.active {
    .tutor-icon-active();
  }

  &.active {
    color: @tutor-primary;
  }
  &.completed {
    background: @tutor-answer-background;
    color: @tutor-answer-color;
  }
  &.status-correct {
    background: @tutor-correct-background;
    color: @tutor-correct-color;
  }
  &.status-incorrect {
    background: @tutor-incorrect-background;
    color: @tutor-incorrect-color;
  }
}
